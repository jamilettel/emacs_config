;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1649 1666])
            ("ring" include nil nil [1667 1682])
            ("time-date" include nil nil [1683 1703])
            ("rcirc" customgroup (:user-visible-flag t) nil [1705 1843])
            ("rcirc-server-alist" variable (:default-value (quote (("irc.freenode.net" :channels ("#rcirc"))))) nil [1845 3841])
            ("rcirc-default-port" variable (:default-value 6667) nil [3843 3947])
            ("rcirc-default-nick" variable (:default-value (user-login-name)) nil [3949 4044])
            ("rcirc-default-user-name" variable (:default-value "user") nil [4046 4233])
            ("rcirc-default-full-name" variable (:default-value "unknown") nil [4235 4424])
            ("rcirc-fill-flag" variable (:default-value t) nil [4426 4553])
            ("rcirc-fill-column" variable nil nil [4555 5030])
            ("rcirc-fill-prefix" variable nil nil [5032 5276])
            ("rcirc-ignore-buffer-activity-flag" variable nil nil [5278 5372])
            ("make-variable-buffer-local" code nil nil [5373 5436])
            ("rcirc-low-priority-flag" variable nil nil [5438 5542])
            ("make-variable-buffer-local" code nil nil [5543 5596])
            ("rcirc-omit-responses" variable (:default-value (quote ("JOIN" "PART" "QUIT" "NICK"))) nil [5598 5774])
            ("rcirc-prompt-start-marker" variable nil nil [5776 5814])
            ("define-minor-mode" code nil nil [5816 6544])
            ("rcirc-time-format" variable (:default-value "%H:%M ") nil [6546 6705])
            ("rcirc-input-ring-size" variable (:default-value 1024) nil [6707 6810])
            ("rcirc-read-only-flag" variable (:default-value t) nil [6812 6933])
            ("rcirc-buffer-maximum-lines" variable nil nil [6935 7247])
            ("rcirc-scroll-show-maximum-output" variable (:default-value t) nil [7249 7405])
            ("rcirc-authinfo" variable nil nil [7407 8842])
            ("rcirc-auto-authenticate-flag" variable (:default-value t) nil [8844 9016])
            ("rcirc-authenticate-before-join" variable (:default-value t) nil [9018 9234])
            ("rcirc-prompt" variable (:default-value "> ") nil [9236 9633])
            ("rcirc-keywords" variable nil nil [9635 9757])
            ("rcirc-ignore-list" variable nil nil [9759 9927])
            ("rcirc-ignore-list-automatic" variable nil nil [9929 10190])
            ("rcirc-bright-nicks" variable nil nil [10192 10333])
            ("rcirc-dim-nicks" variable nil nil [10335 10472])
            ("define-obsolete-variable-alias" code nil nil [10474 10557])
            ("rcirc-print-functions" variable nil nil [10558 10730])
            ("rcirc-authenticated-hook" variable nil nil [10732 10816])
            ("rcirc-always-use-server-buffer-flag" variable nil nil [10818 10984])
            ("rcirc-decode-coding-system" variable (:default-value (quote utf-8)) nil [10986 11209])
            ("rcirc-encode-coding-system" variable (:default-value (quote utf-8)) nil [11211 11351])
            ("rcirc-coding-system-alist" variable nil nil [11353 12254])
            ("rcirc-multiline-major-mode" variable (:default-value (quote fundamental-mode)) nil [12256 12404])
            ("rcirc-nick-completion-format" variable (:default-value "%s: ") nil [12406 12723])
            ("rcirc-kill-channel-buffers" variable nil nil [12725 12971])
            ("rcirc-nick" variable nil nil [12973 12996])
            ("rcirc-prompt-end-marker" variable nil nil [12998 13034])
            ("rcirc-nick-table" variable nil nil [13036 13065])
            ("rcirc-recent-quit-alist" variable nil nil [13067 13169])
            ("rcirc-nick-syntax-table" variable (:default-value (let ((table (make-syntax-table text-mode-syntax-table))) (mapc (lambda (c) (modify-syntax-entry c "w" table)) "[]\\`_^{|}-") (modify-syntax-entry 39 "_" table) table)) nil [13171 13469])
            ("rcirc-buffer-alist" variable nil nil [13527 13558])
            ("rcirc-activity" variable nil nil [13560 13631])
            ("rcirc-activity-string" variable nil nil [13633 13731])
            ("put" code nil nil [13732 13784])
            ("rcirc-server-buffer" variable nil nil [13786 13877])
            ("rcirc-target" variable nil nil [13879 13957])
            ("rcirc-urls" variable nil nil [13959 14053])
            ("put" code nil nil [14054 14090])
            ("rcirc-timeout-seconds" variable (:default-value 600) nil [14092 14195])
            ("rcirc-id-string" variable
               (:constant-flag t
                :default-value (concat "rcirc on GNU Emacs " emacs-version))
                nil [14197 14268])
            ("rcirc-startup-channels" variable nil nil [14271 14306])
            ("rcirc-server-name-history" variable nil nil [14308 14387])
            ("rcirc-server-port-history" variable nil nil [14389 14468])
            ("rcirc-nick-name-history" variable nil nil [14470 14547])
            ("rcirc-user-name-history" variable nil nil [14549 14626])
            ("rcirc" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [14643 17981])
            ("defalias" code nil nil [17998 18020])
            ("rcirc-process-output" variable nil nil [18024 18057])
            ("rcirc-topic" variable nil nil [18058 18082])
            ("rcirc-keepalive-timer" variable nil nil [18083 18117])
            ("rcirc-last-server-message-time" variable nil nil [18118 18161])
            ("rcirc-server" variable nil nil [18162 18187])
            ("rcirc-server-name" variable nil nil [18217 18247])
            ("rcirc-timeout-timer" variable nil nil [18285 18317])
            ("rcirc-user-authenticated" variable nil nil [18318 18355])
            ("rcirc-user-disconnect" variable nil nil [18356 18390])
            ("rcirc-connecting" variable nil nil [18391 18420])
            ("rcirc-connection-info" variable nil nil [18421 18455])
            ("rcirc-process" variable nil nil [18456 18482])
            ("rcirc-connect" function (:arguments ("server" "port" "nick" "user-name" "full-name" "startup-channels" "password" "encryption" "server-alias")) nil [18499 21080])
            ("with-rcirc-process-buffer" function (:arguments ("process" "body")) nil [21082 21235])
            ("with-rcirc-server-buffer" function (:arguments ("body")) nil [21237 21375])
            ("define-obsolete-function-alias" code nil nil [21377 21446])
            ("rcirc-prompt-for-encryption" function (:arguments ("server-plist")) nil [21448 21892])
            ("rcirc-keepalive" function nil nil [21894 22580])
            ("rcirc-handler-ctcp-KEEPALIVE" function (:arguments ("process" "_target" "_sender" "message")) nil [22582 22788])
            ("rcirc-debug-buffer" variable (:default-value "*rcirc debug*") nil [22790 22833])
            ("rcirc-debug-flag" variable nil nil [22834 22922])
            ("rcirc-debug" function (:arguments ("process" "text")) nil [22923 23349])
            ("define-obsolete-variable-alias" code nil nil [23351 23440])
            ("rcirc-sentinel-functions" variable nil nil [23441 23599])
            ("rcirc-reconnect-delay" variable nil nil [23601 23782])
            ("rcirc-last-connect-time" variable nil nil [23784 23864])
            ("rcirc-sentinel" function (:arguments ("process" "sentinel")) nil [23866 24958])
            ("rcirc-disconnect-buffer" function (:arguments ("buffer")) nil [24960 25235])
            ("rcirc-process-list" function nil nil [25237 25562])
            ("define-obsolete-variable-alias" code nil nil [25564 25667])
            ("rcirc-receive-message-functions" variable nil nil [25668 25840])
            ("rcirc-filter" function (:arguments ("process" "output")) nil [25841 26450])
            ("rcirc-reschedule-timeout" function (:arguments ("process")) nil [26452 26793])
            ("rcirc-delete-process" function (:arguments ("process")) nil [26795 26860])
            ("rcirc-trap-errors-flag" variable (:default-value t) nil [26862 26895])
            ("rcirc-process-server-response" function (:arguments ("process" "text")) nil [26896 27234])
            ("rcirc-process-server-response-1" function (:arguments ("process" "text")) nil [27236 28143])
            ("rcirc-responses-no-activity" variable (:default-value (quote ("305" "306"))) nil [28145 28266])
            ("rcirc-handler-generic" function (:arguments ("process" "response" "sender" "args" "_text")) nil [28268 28527])
            ("rcirc--connection-open-p" function (:arguments ("process")) nil [28529 28617])
            ("rcirc-send-string" function (:arguments ("process" "string")) nil [28619 29028])
            ("rcirc-send-privmsg" function (:arguments ("process" "target" "string")) nil [29030 29150])
            ("rcirc-send-ctcp" function (:arguments ("process" "target" "request" "args")) nil [29152 29364])
            ("rcirc-buffer-process" function (:arguments ("buffer")) nil [29366 29713])
            ("rcirc-server-name" function (:arguments ("process")) nil [29715 29927])
            ("rcirc-nick" function (:arguments ("process")) nil [29929 30059])
            ("rcirc-buffer-nick" function (:arguments ("buffer")) nil [30061 30350])
            ("rcirc-max-message-length" variable (:default-value 420) nil [30352 30440])
            ("rcirc-split-message" function (:arguments ("message")) nil [30442 31148])
            ("rcirc-send-message" function (:arguments ("process" "target" "message" "noticep" "silent")) nil [31150 31723])
            ("rcirc-input-ring" variable nil nil [31725 31754])
            ("rcirc-input-ring-index" variable nil nil [31755 31788])
            ("rcirc-prev-input-string" function (:arguments ("arg")) nil [31790 31888])
            ("rcirc-insert-prev-input" function nil nil [31890 32145])
            ("rcirc-insert-next-input" function nil nil [32147 32403])
            ("rcirc-server-commands" variable (:default-value (quote ("/admin" "/away" "/connect" "/die" "/error" "/info" "/invite" "/ison" "/join" "/kick" "/kill" "/links" "/list" "/lusers" "/mode" "/motd" "/names" "/nick" "/notice" "/oper" "/part" "/pass" "/ping" "/pong" "/privmsg" "/quit" "/rehash" "/restart" "/service" "/servlist" "/server" "/squery" "/squit" "/stats" "/summon" "/time" "/topic" "/trace" "/user" "/userhost" "/users" "/version" "/wallops" "/who" "/whois" "/whowas"))) nil [32405 33044])
            ("rcirc-client-commands" variable (:default-value (quote ("/me" "/ctcp"))) nil [33105 33269])
            ("rcirc-completion-at-point" function nil nil [33271 34111])
            ("rcirc-completions" variable nil nil [34113 34143])
            ("rcirc-completion-start" variable nil nil [34144 34179])
            ("rcirc-complete" function (:user-visible-flag t) nil [34181 35248])
            ("set-rcirc-decode-coding-system" function
               (:user-visible-flag t
                :arguments ("coding-system"))
                nil [35250 35472])
            ("set-rcirc-encode-coding-system" function
               (:user-visible-flag t
                :arguments ("coding-system"))
                nil [35474 35696])
            ("rcirc-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "RET") (quote rcirc-send-input)) (define-key map (kbd "M-p") (quote rcirc-insert-prev-input)) (define-key map (kbd "M-n") (quote rcirc-insert-next-input)) (define-key map (kbd "TAB") (quote rcirc-complete)) (define-key map (kbd "C-c C-b") (quote rcirc-browse-url)) (define-key map (kbd "C-c C-c") (quote rcirc-edit-multiline)) (define-key map (kbd "C-c C-j") (quote rcirc-cmd-join)) (define-key map (kbd "C-c C-k") (quote rcirc-cmd-kick)) (define-key map (kbd "C-c C-l") (quote rcirc-toggle-low-priority)) (define-key map (kbd "C-c C-d") (quote rcirc-cmd-mode)) (define-key map (kbd "C-c C-m") (quote rcirc-cmd-msg)) (define-key map (kbd "C-c C-r") (quote rcirc-cmd-nick)) (define-key map (kbd "C-c C-o") (quote rcirc-omit-mode)) (define-key map (kbd "C-c C-p") (quote rcirc-cmd-part)) (define-key map (kbd "C-c C-q") (quote rcirc-cmd-query)) (define-key map (kbd "C-c C-t") (quote rcirc-cmd-topic)) (define-key map (kbd "C-c C-n") (quote rcirc-cmd-names)) (define-key map (kbd "C-c C-w") (quote rcirc-cmd-whois)) (define-key map (kbd "C-c C-x") (quote rcirc-cmd-quit)) (define-key map (kbd "C-c TAB") (quote rcirc-toggle-ignore-buffer-activity)) (define-key map (kbd "C-c C-s") (quote rcirc-switch-to-server-buffer)) (define-key map (kbd "C-c C-a") (quote rcirc-jump-to-first-unread-line)) map)) nil [35698 37060])
            ("rcirc-short-buffer-name" variable nil nil [37062 37161])
            ("rcirc-mode-hook" variable nil nil [37163 37234])
            ("rcirc-last-post-time" variable nil nil [37236 37269])
            ("rcirc-log-alist" variable nil nil [37271 37410])
            ("rcirc-current-line" variable nil nil [37412 37567])
            ("rcirc-mode" function (:arguments ("process" "target")) nil [37569 40245])
            ("rcirc-update-prompt" function (:arguments ("all")) nil [40247 41476])
            ("rcirc-set-changed" function (:arguments ("option" "value")) nil [41478 41720])
            ("rcirc-channel-p" function (:arguments ("target")) nil [41722 41919])
            ("rcirc-log-directory" variable (:default-value "~/.emacs.d/rcirc-log") nil [41921 42046])
            ("rcirc-log-flag" variable nil nil [42048 42199])
            ("rcirc-kill-buffer-hook" function nil nil [42201 42771])
            ("rcirc-change-major-mode-hook" function nil nil [42773 42910])
            ("rcirc-clean-up-buffer" function (:arguments ("reason")) nil [42912 43567])
            ("rcirc-generate-new-buffer-name" function (:arguments ("process" "target")) nil [43569 43872])
            ("rcirc-get-buffer" function (:arguments ("process" "target" "server")) nil [43874 44320])
            ("rcirc-get-buffer-create" function (:arguments ("process" "target")) nil [44322 45012])
            ("rcirc-send-input" function (:user-visible-flag t) nil [45014 46104])
            ("rcirc-fill-paragraph" function (:arguments ("justify")) nil [46106 46403])
            ("rcirc-process-input-line" function (:arguments ("line")) nil [46405 46626])
            ("rcirc-process-message" function (:arguments ("line")) nil [46628 46896])
            ("rcirc-process-command" function (:arguments ("command" "args" "line")) nil [46898 47651])
            ("rcirc-parent-buffer" variable nil nil [47653 47685])
            ("make-variable-buffer-local" code nil nil [47686 47735])
            ("put" code nil nil [47736 47781])
            ("rcirc-window-configuration" variable nil nil [47782 47821])
            ("rcirc-edit-multiline" function (:user-visible-flag t) nil [47822 48562])
            ("rcirc-multiline-minor-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-c C-c") (quote rcirc-multiline-minor-submit)) (define-key map (kbd "C-x C-s") (quote rcirc-multiline-minor-submit)) (define-key map (kbd "C-c C-k") (quote rcirc-multiline-minor-cancel)) (define-key map (kbd "ESC ESC ESC") (quote rcirc-multiline-minor-cancel)) map)) nil [48564 48960])
            ("define-minor-mode" code nil nil [48962 49375])
            ("rcirc-multiline-minor-submit" function (:user-visible-flag t) nil [49377 49855])
            ("rcirc-multiline-minor-cancel" function (:user-visible-flag t) nil [49857 50032])
            ("rcirc-any-buffer" function (:arguments ("process")) nil [50034 50437])
            ("rcirc-response-formats" variable (:default-value (quote (("PRIVMSG" . "<%N> %m") ("NOTICE" . "-%N- %m") ("ACTION" . "[%N %m]") ("COMMAND" . "%m") ("ERROR" . "%fw!!! %m") (t . "%fp*** %fs%n %r %m")))) nil [50439 51601])
            ("rcirc-format-response-string" function (:arguments ("process" "sender" "response" "target" "text")) nil [51603 53434])
            ("rcirc-target-buffer" function (:arguments ("process" "sender" "response" "target" "_text")) nil [53436 54057])
            ("rcirc-activity-types" variable nil nil [54059 54092])
            ("make-variable-buffer-local" code nil nil [54093 54143])
            ("rcirc-last-sender" variable nil nil [54144 54174])
            ("make-variable-buffer-local" code nil nil [54175 54222])
            ("rcirc-omit-threshold" variable (:default-value 100) nil [54224 54388])
            ("rcirc-log-process-buffers" variable nil nil [54390 54545])
            ("rcirc-last-quit-line" function (:arguments ("process" "nick" "target")) nil [54547 54859])
            ("rcirc-last-line" function (:arguments ("process" "nick" "target")) nil [54861 55235])
            ("rcirc-elapsed-lines" function (:arguments ("process" "nick" "target")) nil [55237 55539])
            ("rcirc-markup-text-functions" variable (:default-value (quote (rcirc-markup-attributes rcirc-markup-my-nick rcirc-markup-urls rcirc-markup-keywords rcirc-markup-bright-nicks))) nil [55541 55960])
            ("rcirc-print" function (:arguments ("process" "sender" "response" "target" "text" "activity")) nil [55962 60811])
            ("rcirc-generate-log-filename" function (:arguments ("process" "target")) nil [60813 60960])
            ("rcirc-log-filename-function" variable (:default-value (quote rcirc-generate-log-filename)) nil [60962 61605])
            ("rcirc-log" function (:arguments ("process" "sender" "response" "target" "text")) nil [61607 62196])
            ("rcirc-log-write" function nil nil [62198 62811])
            ("rcirc-view-log-file" function (:user-visible-flag t) nil [62813 63072])
            ("rcirc-join-channels" function (:arguments ("process" "channels")) nil [63074 63273])
            ("rcirc-nick-prefix-chars" variable (:default-value "~&@%+") nil [63296 63336])
            ("rcirc-user-nick" function (:arguments ("user")) nil [63337 63582])
            ("rcirc-nick-channels" function (:arguments ("process" "nick")) nil [63584 63773])
            ("rcirc-put-nick-channel" function (:arguments ("process" "nick" "channel" "line")) nil [63775 64336])
            ("rcirc-nick-remove" function (:arguments ("process" "nick")) nil [64338 64480])
            ("rcirc-remove-nick-channel" function (:arguments ("process" "nick" "channel")) nil [64482 64995])
            ("rcirc-channel-nicks" function (:arguments ("process" "target")) nil [64997 65568])
            ("rcirc-ignore-update-automatic" function (:arguments ("nick")) nil [65570 65904])
            ("rcirc-nickname<" function (:arguments ("s1" "s2")) nil [65907 66469])
            ("rcirc-sort-nicknames-join" function (:arguments ("input" "sep")) nil [66471 66792])
            ("rcirc-track-minor-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map (kbd "C-c C-@") (quote rcirc-next-active-buffer)) (define-key map (kbd "C-c C-SPC") (quote rcirc-next-active-buffer)) map)) nil [66817 67064])
            ("define-minor-mode" code nil nil [67081 67993])
            ("or" code nil nil [67995 68167])
            ("or" code nil nil [68168 68320])
            ("rcirc-toggle-ignore-buffer-activity" function (:user-visible-flag t) nil [68322 68687])
            ("rcirc-toggle-low-priority" function (:user-visible-flag t) nil [68689 69025])
            ("rcirc-switch-to-server-buffer" function (:user-visible-flag t) nil [69027 69272])
            ("rcirc-jump-to-first-unread-line" function (:user-visible-flag t) nil [69274 69516])
            ("rcirc-bury-buffers" function (:user-visible-flag t) nil [69518 69767])
            ("rcirc-next-active-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [69798 70514])
            ("define-obsolete-variable-alias" code nil nil [70516 70605])
            ("rcirc-activity-functions" variable nil nil [70606 70861])
            ("rcirc-record-activity" function (:arguments ("buffer" "type")) nil [70863 71662])
            ("rcirc-clear-activity" function (:arguments ("buffer")) nil [71664 71854])
            ("rcirc-clear-unread" function (:arguments ("buffer")) nil [71856 72053])
            ("rcirc-split-activity" function (:arguments ("activity")) nil [72055 72409])
            ("rcirc-update-activity-string-hook" variable nil nil [72411 72511])
            ("rcirc-update-activity-string" function nil nil [72543 73079])
            ("rcirc-activity-string" function (:arguments ("buffers")) nil [73081 73463])
            ("rcirc-short-buffer-name" function (:arguments ("buffer")) nil [73465 73653])
            ("rcirc-visible-buffers" function nil nil [73655 73926])
            ("rcirc-visible-buffers" variable nil nil [73928 73962])
            ("rcirc-window-configuration-change" function nil nil [73963 74255])
            ("rcirc-window-configuration-change-1" function nil nil [74257 75140])
            ("rcirc-update-short-buffer-names" function nil nil [75173 75531])
            ("rcirc-abbreviate" function (:arguments ("pairs")) nil [75533 75637])
            ("rcirc-rebuild-tree" function (:arguments ("tree" "acc")) nil [75639 75958])
            ("rcirc-make-trees" function (:arguments ("pairs")) nil [75960 76797])
            ("defun-rcirc-command" function (:arguments ("command" "argument" "docstring" "interactive-form" "body")) nil [76978 77655])
            ("defun-rcirc-command" code nil nil [77657 78383])
            ("defun-rcirc-command" code nil nil [78385 78807])
            ("defun-rcirc-command" code nil nil [78809 79461])
            ("defun-rcirc-command" code nil nil [79463 79753])
            ("defun-rcirc-command" code nil nil [79828 80057])
            ("defun-rcirc-command" code nil nil [80059 80306])
            ("defun-rcirc-command" code nil nil [80308 80754])
            ("defun-rcirc-command" code nil nil [80756 80971])
            ("defun-rcirc-command" code nil nil [80973 81480])
            ("defun-rcirc-command" code nil nil [81482 81912])
            ("defun-rcirc-command" code nil nil [81914 82193])
            ("defun-rcirc-command" code nil nil [82195 82431])
            ("defun-rcirc-command" code nil nil [82433 82610])
            ("defun-rcirc-command" code nil nil [82612 82765])
            ("defun-rcirc-command" code nil nil [82767 82916])
            ("defun-rcirc-command" code nil nil [82918 83469])
            ("rcirc-cmd-ctcp" function (:arguments ("args" "process" "_target")) nil [83471 84036])
            ("rcirc-ctcp-sender-PING" function (:arguments ("process" "target" "_request")) nil [84038 84236])
            ("rcirc-cmd-me" function (:arguments ("args" "process" "target")) nil [84238 84339])
            ("rcirc-add-or-remove" function (:arguments ("set" "elements")) nil [84341 84555])
            ("defun-rcirc-command" code nil nil [84557 85158])
            ("defun-rcirc-command" code nil nil [85160 85482])
            ("defun-rcirc-command" code nil nil [85484 85790])
            ("defun-rcirc-command" code nil nil [85792 86211])
            ("rcirc-add-face" function (:arguments ("start" "end" "name" "object")) nil [86215 86735])
            ("rcirc-facify" function (:arguments ("string" "face")) nil [86737 86921])
            ("rcirc-url-regexp" variable (:default-value (concat "\\b\\(\\(www\\.\\|\\(s?https?\\|ftp\\|file\\|gopher\\|" "nntp\\|news\\|telnet\\|wais\\|mailto\\|info\\):\\)" "\\(//[-a-z0-9_.]+:[0-9]*\\)?" (if (string-match "[[:digit:]]" "1") (let ((chars "-a-z0-9_=#$@~%&*+\\/[:word:]") (punct "!?:;.,")) (concat "\\(?:" "[" chars punct "]+" "(" "[" chars punct "]+" "[" chars "]*)" "[" chars "]" "\\|" "[" chars punct "]+" "[" chars "]" "\\)")) (concat "\\([-a-z0-9_=!?#$@~%&*+\\/:;.,]\\|\\w\\)+" "\\([-a-z0-9_=#$@~%&*+\\/]\\|\\w\\)")) "\\)")) nil [86923 87688])
            ("rcirc-condition-filter" function (:arguments ("condp" "lst")) nil [87713 88020])
            ("rcirc-browse-url" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [88022 88639])
            ("rcirc-markup-timestamp" function (:arguments ("_sender" "_response")) nil [88642 88803])
            ("rcirc-markup-attributes" function (:arguments ("_sender" "_response")) nil [88805 89532])
            ("rcirc-markup-my-nick" function (:arguments ("_sender" "response")) nil [89534 90033])
            ("rcirc-markup-urls" function (:arguments ("_sender" "_response")) nil [90035 90901])
            ("rcirc-markup-keywords" function (:arguments ("sender" "response")) nil [90903 91465])
            ("rcirc-markup-bright-nicks" function (:arguments ("_sender" "response")) nil [91467 91787])
            ("rcirc-markup-fill" function (:arguments ("_sender" "response")) nil [91789 92292])
            ("rcirc-handler-001" function (:arguments ("process" "sender" "args" "text")) nil [92525 93554])
            ("rcirc-join-channels-post-auth" function (:arguments ("process")) nil [93556 93754])
            ("rcirc-handler-PRIVMSG" function (:arguments ("process" "sender" "args" "text")) nil [93756 94366])
            ("rcirc-handler-NOTICE" function (:arguments ("process" "sender" "args" "text")) nil [94368 95034])
            ("rcirc-check-auth-status" function (:arguments ("process" "sender" "args" "_text")) nil [95036 96311])
            ("rcirc-handler-WALLOPS" function (:arguments ("process" "sender" "args" "_text")) nil [96313 96431])
            ("rcirc-handler-JOIN" function (:arguments ("process" "sender" "args" "_text")) nil [96433 97332])
            ("rcirc-handler-PART-or-KICK" function (:arguments ("process" "_response" "channel" "_sender" "nick" "_args")) nil [97376 98010])
            ("rcirc-handler-PART" function (:arguments ("process" "sender" "args" "_text")) nil [98012 98461])
            ("rcirc-handler-KICK" function (:arguments ("process" "sender" "args" "_text")) nil [98463 98939])
            ("rcirc-maybe-remember-nick-quit" function (:arguments ("process" "nick" "channel")) nil [98941 99573])
            ("rcirc-handler-QUIT" function (:arguments ("process" "sender" "args" "_text")) nil [99575 99997])
            ("rcirc-handler-NICK" function (:arguments ("process" "sender" "args" "_text")) nil [99999 101312])
            ("rcirc-handler-PING" function (:arguments ("process" "_sender" "args" "_text")) nil [101314 101428])
            ("rcirc-handler-PONG" function (:arguments ("_process" "_sender" "_args" "_text")) nil [101430 101506])
            ("rcirc-handler-TOPIC" function (:arguments ("process" "sender" "args" "_text")) nil [101508 101746])
            ("rcirc-nick-away-alist" variable nil nil [101748 101782])
            ("rcirc-handler-301" function (:arguments ("process" "_sender" "args" "text")) nil [101783 102266])
            ("rcirc-handler-317" function (:arguments ("process" "sender" "args" "_text")) nil [102268 102897])
            ("rcirc-handler-332" function (:arguments ("process" "_sender" "args" "_text")) nil [102899 103158])
            ("rcirc-handler-333" function (:arguments ("process" "sender" "args" "_text")) nil [103160 103667])
            ("rcirc-handler-477" function (:arguments ("process" "sender" "args" "_text")) nil [103669 103804])
            ("rcirc-handler-MODE" function (:arguments ("process" "sender" "args" "_text")) nil [103806 104303])
            ("rcirc-get-temp-buffer-create" function (:arguments ("process" "channel")) nil [104305 104520])
            ("rcirc-handler-353" function (:arguments ("process" "_sender" "args" "_text")) nil [104522 105033])
            ("rcirc-handler-366" function (:arguments ("process" "sender" "args" "_text")) nil [105035 105441])
            ("rcirc-handler-433" function (:arguments ("process" "sender" "args" "text")) nil [105443 105705])
            ("rcirc-authenticate" function (:user-visible-flag t) nil [105707 107216])
            ("rcirc-handler-INVITE" function (:arguments ("process" "sender" "args" "_text")) nil [107218 107351])
            ("rcirc-handler-ERROR" function (:arguments ("process" "sender" "args" "_text")) nil [107353 107482])
            ("rcirc-handler-CTCP" function (:arguments ("process" "target" "sender" "text")) nil [107484 108170])
            ("rcirc-handler-ctcp-VERSION" function (:arguments ("process" "_target" "sender" "_args")) nil [108172 108412])
            ("rcirc-handler-ctcp-ACTION" function (:arguments ("process" "target" "sender" "args")) nil [108414 108530])
            ("rcirc-handler-ctcp-TIME" function (:arguments ("process" "_target" "sender" "_args")) nil [108532 108743])
            ("rcirc-handler-CTCP-response" function (:arguments ("process" "_target" "sender" "message")) nil [108745 108865])
            ("rcirc-faces" customgroup (:user-visible-flag t) nil [108868 108947])
            ("rcirc-my-nick" variable
               (:default-value (quote ((((class color) (min-colors 88) (background light)) :foreground "Blue1") (((class color) (min-colors 88) (background dark)) :foreground "LightSkyBlue") (((class color) (min-colors 16) (background light)) :foreground "Blue") (((class color) (min-colors 16) (background dark)) :foreground "LightSkyBlue") (((class color) (min-colors 8)) :foreground "blue" :weight bold) (t :inverse-video t :weight bold)))
                :type "face")
                nil [108949 109488])
            ("rcirc-other-nick" variable
               (:default-value (quote ((((class grayscale) (background light)) :foreground "Gray90" :weight bold :slant italic) (((class grayscale) (background dark)) :foreground "DimGray" :weight bold :slant italic) (((class color) (min-colors 88) (background light)) :foreground "DarkGoldenrod") (((class color) (min-colors 88) (background dark)) :foreground "LightGoldenrod") (((class color) (min-colors 16) (background light)) :foreground "DarkGoldenrod") (((class color) (min-colors 16) (background dark)) :foreground "LightGoldenrod") (((class color) (min-colors 8)) :foreground "yellow" :weight light) (t :weight bold :slant italic)))
                :type "face")
                nil [109490 110262])
            ("rcirc-bright-nick" variable
               (:default-value (quote ((((class grayscale) (background light)) :foreground "LightGray" :weight bold :underline t) (((class grayscale) (background dark)) :foreground "Gray50" :weight bold :underline t) (((class color) (min-colors 88) (background light)) :foreground "CadetBlue") (((class color) (min-colors 88) (background dark)) :foreground "Aquamarine") (((class color) (min-colors 16) (background light)) :foreground "CadetBlue") (((class color) (min-colors 16) (background dark)) :foreground "Aquamarine") (((class color) (min-colors 8)) :foreground "magenta") (t :weight bold :underline t)))
                :type "face")
                nil [110264 110987])
            ("rcirc-dim-nick" variable
               (:default-value (quote ((t :inherit default)))
                :type "face")
                nil [110989 111108])
            ("rcirc-server" variable
               (:default-value (quote ((((class grayscale) (background light)) :foreground "DimGray" :weight bold :slant italic) (((class grayscale) (background dark)) :foreground "LightGray" :weight bold :slant italic) (((class color) (min-colors 88) (background light)) :foreground "Firebrick") (((class color) (min-colors 88) (background dark)) :foreground "chocolate1") (((class color) (min-colors 16) (background light)) :foreground "red") (((class color) (min-colors 16) (background dark)) :foreground "red1") (((class color) (min-colors 8) (background light))) (((class color) (min-colors 8) (background dark))) (t :weight bold :slant italic)))
                :type "face")
                nil [111110 111895])
            ("rcirc-server-prefix" variable
               (:default-value (quote ((default :inherit rcirc-server) (((class grayscale))) (((class color) (min-colors 16))) (((class color) (min-colors 8) (background light)) :foreground "red") (((class color) (min-colors 8) (background dark)) :foreground "red1")))
                :type "face")
                nil [111897 112279])
            ("rcirc-timestamp" variable
               (:default-value (quote ((t :inherit default)))
                :type "face")
                nil [112281 112385])
            ("rcirc-nick-in-message" variable
               (:default-value (quote ((((class grayscale) (background light)) :foreground "LightGray" :weight bold) (((class grayscale) (background dark)) :foreground "DimGray" :weight bold) (((class color) (min-colors 88) (background light)) :foreground "Purple") (((class color) (min-colors 88) (background dark)) :foreground "Cyan1") (((class color) (min-colors 16) (background light)) :foreground "Purple") (((class color) (min-colors 16) (background dark)) :foreground "Cyan") (((class color) (min-colors 8)) :foreground "cyan" :weight bold) (t :weight bold)))
                :type "face")
                nil [112387 113086])
            ("rcirc-nick-in-message-full-line" variable
               (:default-value (quote ((t :weight bold)))
                :type "face")
                nil [113088 113250])
            ("rcirc-prompt" variable
               (:default-value (quote ((((min-colors 88) (background dark)) :foreground "cyan1") (((background dark)) :foreground "cyan") (t :foreground "dark blue")))
                :type "face")
                nil [113252 113492])
            ("rcirc-track-nick" variable
               (:default-value (quote ((((type tty)) :inherit default) (t :inverse-video t)))
                :type "face")
                nil [113494 113670])
            ("rcirc-track-keyword" variable
               (:default-value (quote ((t :weight bold)))
                :type "face")
                nil [113672 113809])
            ("rcirc-url" variable
               (:default-value (quote ((t :weight bold)))
                :type "face")
                nil [113811 113911])
            ("rcirc-keyword" variable
               (:default-value (quote ((t :inherit highlight)))
                :type "face")
                nil [113913 114027])
            ("put" code nil nil [114098 114164])
            ("rcirc-looking-at-input" function nil nil [114165 114289])
            ("rcirc" package nil nil [114293 114309]))          
      :file "rcirc.el.gz"
      :pointmax 114334
      :fsize 28789
      :lastmodtime '(23603 24958 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("net-utils--executable-find-sbin" function (:arguments ("command")) nil [1692 1901])
            ("net-utils" customgroup (:user-visible-flag t) nil [2053 2164])
            ("traceroute-program" variable (:default-value (if (eq system-type (quote windows-nt)) "tracert" "traceroute")) nil [2166 2354])
            ("traceroute-program-options" variable nil nil [2356 2484])
            ("ping-program" variable (:default-value "ping") nil [2486 2606])
            ("ping-program-options" variable (:default-value (and (eq system-type (quote gnu/linux)) (list "-c" "4"))) nil [2720 2961])
            ("define-obsolete-variable-alias" code nil nil [2963 3038])
            ("ifconfig-program" variable (:default-value (cond ((eq system-type (quote windows-nt)) "ipconfig") ((executable-find "ifconfig") "ifconfig") ((net-utils--executable-find-sbin "ifconfig")) ((net-utils--executable-find-sbin "ip")) (t "ip"))) nil [3040 3432])
            ("define-obsolete-variable-alias" code nil nil [3434 3527])
            ("ifconfig-program-options" variable (:default-value (cond ((string-match "ipconfig\\'" ifconfig-program) (quote ("/all"))) ((string-match "ifconfig\\'" ifconfig-program) (quote ("-a"))) ((string-match "ip\\'" ifconfig-program) (quote ("addr"))))) nil [3529 3891])
            ("iwconfig-program" variable (:default-value (cond ((executable-find "iwconfig") "iwconfig") ((net-utils--executable-find-sbin "iw") "iw") (t "iw"))) nil [3893 4162])
            ("iwconfig-program-options" variable (:default-value (cond ((string-match-p "iw\\'" iwconfig-program) (list "dev")) (t nil))) nil [4164 4379])
            ("netstat-program" variable (:default-value (cond ((executable-find "netstat") "netstat") ((net-utils--executable-find-sbin "ss")) (t "ss"))) nil [4381 4619])
            ("netstat-program-options" variable (:default-value (list "-a")) nil [4621 4753])
            ("arp-program" variable (:default-value (or (net-utils--executable-find-sbin "arp") "arp")) nil [4755 4921])
            ("arp-program-options" variable (:default-value (list "-a")) nil [4923 5047])
            ("route-program" variable (:default-value (cond ((eq system-type (quote windows-nt)) "route") ((executable-find "netstat") "netstat") ((net-utils--executable-find-sbin "netstat")) ((executable-find "ip") "ip") ((net-utils--executable-find-sbin "ip")) (t "ip"))) nil [5049 5420])
            ("route-program-options" variable (:default-value (cond ((eq system-type (quote windows-nt)) (list "print")) ((string-match-p "netstat\\'" route-program) (list "-r")) (t (list "route")))) nil [5422 5702])
            ("nslookup-program" variable (:default-value "nslookup") nil [5704 5832])
            ("nslookup-program-options" variable nil nil [5834 5958])
            ("nslookup-prompt-regexp" variable (:default-value "^> ") nil [5960 6161])
            ("dig-program" variable (:default-value "dig") nil [6163 6267])
            ("dig-program-options" variable nil nil [6269 6400])
            ("ftp-program" variable (:default-value "ftp") nil [6402 6508])
            ("ftp-program-options" variable nil nil [6510 6624])
            ("ftp-prompt-regexp" variable (:default-value "^ftp>") nil [6626 6834])
            ("smbclient-program" variable (:default-value "smbclient") nil [6836 6937])
            ("smbclient-program-options" variable nil nil [6939 7065])
            ("smbclient-prompt-regexp" variable (:default-value "^smb: >") nil [7067 7289])
            ("dns-lookup-program" variable (:default-value "host") nil [7291 7417])
            ("dns-lookup-program-options" variable nil nil [7419 7547])
            ("network-connection-service" variable nil nil [7571 7610])
            ("network-connection-host" variable nil nil [7611 7650])
            ("nslookup-font-lock-keywords" variable (:default-value (list (list "^[A-Za-z0-9 _]+:" 0 (quote font-lock-type-face)) (list "\\<\\(SOA\\|NS\\|MX\\|A\\|CNAME\\)\\>" 1 (quote font-lock-keyword-face)) (list (mapconcat (quote identity) (make-list 4 "[0-9]+") "\\.") 0 (quote font-lock-variable-name-face)) (list (let ((host-expression "[-A-Za-z0-9]+")) (concat (mapconcat (quote identity) (make-list 2 host-expression) "\\.") "\\(\\." host-expression "\\)*")) 0 (quote font-lock-variable-name-face)))) nil [7795 8434])
            ("net-utils-font-lock-keywords" variable (:default-value (list (list (mapconcat (quote identity) (make-list 4 "[0-9]+") "\\.") 0 (quote font-lock-variable-name-face)) (list (concat "\\( \\([[:xdigit:]]+\\(:\\|::\\)\\)+[[:xdigit:]]+\\)" "\\|" "\\(::[[:xdigit:]]+\\)") 0 (quote font-lock-variable-name-face)) (list (let ((host-expression "[-A-Za-z0-9]+")) (concat (mapconcat (quote identity) (make-list 2 host-expression) "\\.") "\\(\\." host-expression "\\)*")) 0 (quote font-lock-variable-name-face)))) nil [8593 9227])
            ("define-derived-mode" code nil nil [9229 9515])
            ("net-utils-machine-at-point" function nil nil [9779 10071])
            ("net-utils-url-at-point" function nil nil [10073 10426])
            ("net-utils-remove-ctrl-m-filter" function (:arguments ("process" "output-string")) nil [10428 10999])
            ("declare-function" code nil nil [11001 11066])
            ("net-utils-run-program" function (:arguments ("name" "header" "program" "args")) nil [11068 11775])
            ("net-utils--revert-cmd" variable nil nil [11991 12025])
            ("net-utils-run-simple" function (:arguments ("buffer" "program-name" "args" "nodisplay")) nil [12027 13184])
            ("net-utils--revert-function" function (:arguments ("ignore-auto" "noconfirm")) nil [13186 13623])
            ("ifconfig" function (:user-visible-flag t) nil [13640 13842])
            ("defalias" code nil nil [13844 13874])
            ("iwconfig" function (:user-visible-flag t) nil [13891 14093])
            ("netstat" function (:user-visible-flag t) nil [14110 14307])
            ("arp" function (:user-visible-flag t) nil [14324 14501])
            ("route" function (:user-visible-flag t) nil [14518 14705])
            ("traceroute" function
               (:user-visible-flag t
                :arguments ("target"))
                nil [14887 15213])
            ("ping" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [15230 15705])
            ("nslookup-host" function
               (:user-visible-flag t
                :arguments ("host" "name-server"))
                nil [15986 16791])
            ("nslookup" function (:user-visible-flag t) nil [16808 16952])
            ("comint-prompt-regexp" variable nil nil [16954 16983])
            ("comint-input-autoexpand" variable nil nil [16984 17016])
            ("comint-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [17018 17056])
            ("nslookup-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote completion-at-point)) map)) nil [17058 17176])
            ("define-derived-mode" code nil nil [17232 17525])
            ("dns-lookup-host" function
               (:user-visible-flag t
                :arguments ("host" "name-server"))
                nil [17542 18381])
            ("run-dig" function
               (:user-visible-flag t
                :arguments ("host" "name-server"))
                nil [18398 19176])
            ("comint-exec" function (:prototype-flag t) nil [19178 19210])
            ("ftp" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [19282 19721])
            ("ftp-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote completion-at-point)) map)) nil [19723 19863])
            ("define-derived-mode" code nil nil [19865 20604])
            ("smbclient" function
               (:user-visible-flag t
                :arguments ("host" "service"))
                nil [20606 21285])
            ("smbclient-list-shares" function
               (:user-visible-flag t
                :arguments ("host"))
                nil [21287 21740])
            ("define-derived-mode" code nil nil [21742 22505])
            ("network-connection-service-alist" variable (:default-value (list (cons (quote echo) 7) (cons (quote active-users) 11) (cons (quote daytime) 13) (cons (quote chargen) 19) (cons (quote ftp) 21) (cons (quote telnet) 23) (cons (quote smtp) 25) (cons (quote time) 37) (cons (quote whois) 43) (cons (quote gopher) 70) (cons (quote finger) 79) (cons (quote www) 80) (cons (quote pop2) 109) (cons (quote pop3) 110) (cons (quote sun-rpc) 111) (cons (quote nntp) 119) (cons (quote ntp) 123) (cons (quote netbios-name) 137) (cons (quote netbios-data) 139) (cons (quote irc) 194) (cons (quote https) 443) (cons (quote rlogin) 513))) nil [22732 23407])
            ("run-network-program" function (:arguments ("process-name" "host" "port" "initial-string")) nil [23430 24047])
            ("finger-X.500-host-regexps" variable nil nil [24192 24545])
            ("finger" function
               (:user-visible-flag t
                :arguments ("user" "host"))
                nil [24581 25765])
            ("whois-server-name" variable (:default-value "rs.internic.net") nil [25767 25896])
            ("whois-server-list" variable (:default-value (quote (("whois.arin.net") ("rs.internic.net") ("whois.publicinterestregistry.net") ("whois.abuse.net") ("whois.apnic.net") ("nic.ddn.mil") ("whois.nic.mil") ("whois.nic.gov") ("whois.ripe.net")))) nil [25898 26326])
            ("whois-server-tld" variable (:default-value (quote (("rs.internic.net" . "com") ("whois.publicinterestregistry.net" . "org") ("whois.ripe.net" . "be") ("whois.ripe.net" . "de") ("whois.ripe.net" . "dk") ("whois.ripe.net" . "it") ("whois.ripe.net" . "fi") ("whois.ripe.net" . "fr") ("whois.ripe.net" . "uk") ("whois.apnic.net" . "au") ("whois.apnic.net" . "ch") ("whois.apnic.net" . "hk") ("whois.apnic.net" . "jp") ("whois.nic.gov" . "gov") ("whois.nic.mil" . "mil")))) nil [26503 27119])
            ("whois-guess-server" variable (:default-value t) nil [27121 27387])
            ("whois-get-tld" function (:arguments ("host")) nil [27389 27705])
            ("whois" function
               (:user-visible-flag t
                :arguments ("arg" "search-string"))
                nil [27740 28562])
            ("whois-reverse-lookup-server" variable (:default-value "whois.arin.net") nil [28564 28704])
            ("whois-reverse-lookup" function nil nil [28721 28858])
            ("define-derived-mode" code nil nil [29068 29216])
            ("network-connection-mode-setup" function (:arguments ("host" "service")) nil [29218 29453])
            ("network-connection-to-service" function
               (:user-visible-flag t
                :arguments ("host" "service"))
                nil [29470 29995])
            ("network-connection" function
               (:user-visible-flag t
                :arguments ("host" "port"))
                nil [30012 30192])
            ("network-service-connection" function (:arguments ("host" "service")) nil [30194 30773])
            ("comint-input-ring" variable nil nil [30775 30801])
            ("network-connection-reconnect" function (:user-visible-flag t) nil [30803 31571])
            ("net-utils" package nil nil [31573 31593]))          
      :file "net-utils.el.gz"
      :pointmax 31622
      :fsize 7810
      :lastmodtime '(23603 24958 0 0)
      :unmatched-syntax nil))
  :file "!usr!share!emacs!26.3!lisp!net!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
