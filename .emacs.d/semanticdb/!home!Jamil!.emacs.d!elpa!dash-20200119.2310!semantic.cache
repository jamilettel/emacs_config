;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("unless" code nil nil [1467 1521])
            ("dash" customgroup (:user-visible-flag t) nil [1524 1607])
            ("dash--enable-fontlock" function (:arguments ("symbol" "value")) nil [1609 1725])
            ("dash-enable-fontlock" variable nil nil [1727 1908])
            ("!cons" function (:arguments ("car" "cdr")) nil [1910 2021])
            ("!cdr" function (:arguments ("list")) nil [2023 2119])
            ("--each" function (:arguments ("list" "body")) nil [2121 2449])
            ("-doto" function (:arguments ("eval-initial-value" "forms")) nil [2451 3049])
            ("--doto" function (:arguments ("eval-initial-value" "forms")) nil [3051 3253])
            ("-each" function (:arguments ("list" "fn")) nil [3255 3387])
            ("put" code nil nil [3389 3425])
            ("defalias" code nil nil [3427 3461])
            ("-each-indexed" function (:arguments ("list" "fn")) nil [3463 3694])
            ("put" code nil nil [3695 3739])
            ("--each-while" function (:arguments ("list" "pred" "body")) nil [3741 4186])
            ("-each-while" function (:arguments ("list" "pred" "fn")) nil [4188 4384])
            ("put" code nil nil [4386 4428])
            ("--each-r" function (:arguments ("list" "body")) nil [4430 5134])
            ("-each-r" function (:arguments ("list" "fn")) nil [5136 5291])
            ("--each-r-while" function (:arguments ("list" "pred" "body")) nil [5293 5744])
            ("-each-r-while" function (:arguments ("list" "pred" "fn")) nil [5746 5955])
            ("--dotimes" function (:arguments ("num" "body")) nil [5957 6307])
            ("-dotimes" function (:arguments ("num" "fn")) nil [6309 6464])
            ("put" code nil nil [6466 6505])
            ("-map" function (:arguments ("fn" "list")) nil [6507 6632])
            ("--map" function (:arguments ("form" "list")) nil [6634 6762])
            ("--reduce-from" function (:arguments ("form" "initial-value" "list")) nil [6764 6967])
            ("-reduce-from" function (:arguments ("fn" "initial-value" "list")) nil [6969 7399])
            ("--reduce" function (:arguments ("form" "list")) nil [7401 7663])
            ("-reduce" function (:arguments ("fn" "list")) nil [7665 8158])
            ("--reduce-r-from" function (:arguments ("form" "initial-value" "list")) nil [8160 8348])
            ("-reduce-r-from" function (:arguments ("fn" "initial-value" "list")) nil [8350 8761])
            ("--reduce-r" function (:arguments ("form" "list")) nil [8763 8902])
            ("-reduce-r" function (:arguments ("fn" "list")) nil [8904 9473])
            ("-reductions-from" function (:arguments ("fn" "init" "list")) nil [9475 9769])
            ("-reductions" function (:arguments ("fn" "list")) nil [9771 10029])
            ("-reductions-r-from" function (:arguments ("fn" "init" "list")) nil [10031 10318])
            ("-reductions-r" function (:arguments ("fn" "list")) nil [10320 10698])
            ("--filter" function (:arguments ("form" "list")) nil [10700 10942])
            ("-filter" function (:arguments ("pred" "list")) nil [10944 11139])
            ("defalias" code nil nil [11141 11169])
            ("defalias" code nil nil [11170 11200])
            ("--remove" function (:arguments ("form" "list")) nil [11202 11352])
            ("-remove" function (:arguments ("pred" "list")) nil [11354 11528])
            ("defalias" code nil nil [11530 11558])
            ("defalias" code nil nil [11559 11589])
            ("-remove-first" function (:arguments ("pred" "list")) nil [11591 11950])
            ("--remove-first" function (:arguments ("form" "list")) nil [11952 12105])
            ("defalias" code nil nil [12107 12147])
            ("defalias" code nil nil [12148 12190])
            ("-remove-last" function (:arguments ("pred" "list")) nil [12192 12394])
            ("--remove-last" function (:arguments ("form" "list")) nil [12396 12546])
            ("defalias" code nil nil [12548 12586])
            ("defalias" code nil nil [12587 12627])
            ("-remove-item" function (:arguments ("item" "list")) nil [12629 12817])
            ("--keep" function (:arguments ("form" "list")) nil [12819 13085])
            ("-keep" function (:arguments ("fn" "list")) nil [13087 13304])
            ("-non-nil" function (:arguments ("list")) nil [13306 13435])
            ("--map-indexed" function (:arguments ("form" "list")) nil [13437 13665])
            ("-map-indexed" function (:arguments ("fn" "list")) nil [13667 13945])
            ("--map-when" function (:arguments ("pred" "rep" "list")) nil [13947 14182])
            ("-map-when" function (:arguments ("pred" "rep" "list")) nil [14184 14521])
            ("defalias" code nil nil [14523 14560])
            ("defalias" code nil nil [14561 14600])
            ("-map-first" function (:arguments ("pred" "rep" "list")) nil [14602 14998])
            ("--map-first" function (:arguments ("pred" "rep" "list")) nil [15000 15147])
            ("-map-last" function (:arguments ("pred" "rep" "list")) nil [15149 15358])
            ("--map-last" function (:arguments ("pred" "rep" "list")) nil [15360 15504])
            ("-replace" function (:arguments ("old" "new" "list")) nil [15506 15725])
            ("-replace-first" function (:arguments ("old" "new" "list")) nil [15727 15966])
            ("-replace-last" function (:arguments ("old" "new" "list")) nil [15968 16203])
            ("--mapcat" function (:arguments ("form" "list")) nil [16205 16340])
            ("-mapcat" function (:arguments ("fn" "list")) nil [16342 16508])
            ("-flatten" function (:arguments ("l")) nil [16510 17085])
            ("--iterate" function (:arguments ("form" "init" "n")) nil [17087 17238])
            ("-flatten-n" function (:arguments ("num" "list")) nil [17240 17440])
            ("-concat" function (:arguments ("lists")) nil [17442 17621])
            ("defalias" code nil nil [17623 17702])
            ("-splice" function (:arguments ("pred" "fun" "list")) nil [17704 18217])
            ("--splice" function (:arguments ("pred" "form" "list")) nil [18219 18347])
            ("-splice-list" function (:arguments ("pred" "new-list" "list")) nil [18349 18533])
            ("--splice-list" function (:arguments ("pred" "new-list" "list")) nil [18535 18672])
            ("-cons*" function (:arguments ("args")) nil [18674 18958])
            ("-snoc" function (:arguments ("list" "elem" "elements")) nil [18960 19192])
            ("--first" function (:arguments ("form" "list")) nil [19194 19423])
            ("-first" function (:arguments ("pred" "list")) nil [19425 19636])
            ("defalias" code nil nil [19638 19663])
            ("defalias" code nil nil [19664 19691])
            ("--some" function (:arguments ("form" "list")) nil [19693 19910])
            ("-some" function (:arguments ("pred" "list")) nil [19912 20067])
            ("defalias" code nil nil [20069 20092])
            ("defalias" code nil nil [20093 20118])
            ("--last" function (:arguments ("form" "list")) nil [20120 20332])
            ("-last" function (:arguments ("pred" "list")) nil [20334 20460])
            ("defalias" code nil nil [20462 20603])
            ("put" code nil nil [20696 20737])
            ("put" code nil nil [20738 20792])
            ("defalias" code nil nil [20794 20927])
            ("defalias" code nil nil [20929 21131])
            ("-fourth-item" function (:arguments ("list")) nil [21133 21324])
            ("-fifth-item" function (:arguments ("list")) nil [21326 21520])
            ("-last-item" function (:arguments ("list")) nil [21522 21668])
            ("with-no-warnings" code nil nil [21851 22033])
            ("-butlast" function (:arguments ("list")) nil [22035 22232])
            ("--count" function (:arguments ("pred" "list")) nil [22234 22448])
            ("-count" function (:arguments ("pred" "list")) nil [22450 22580])
            ("---truthy?" function (:arguments ("val")) nil [22582 22667])
            ("--any?" function (:arguments ("form" "list")) nil [22669 22798])
            ("-any?" function (:arguments ("pred" "list")) nil [22800 22962])
            ("defalias" code nil nil [22964 22989])
            ("defalias" code nil nil [22990 23017])
            ("defalias" code nil nil [23018 23043])
            ("defalias" code nil nil [23044 23071])
            ("defalias" code nil nil [23072 23098])
            ("defalias" code nil nil [23099 23127])
            ("--all?" function (:arguments ("form" "list")) nil [23129 23345])
            ("-all?" function (:arguments ("pred" "list")) nil [23347 23511])
            ("defalias" code nil nil [23513 23539])
            ("defalias" code nil nil [23540 23568])
            ("defalias" code nil nil [23569 23594])
            ("defalias" code nil nil [23595 23622])
            ("defalias" code nil nil [23623 23650])
            ("defalias" code nil nil [23651 23680])
            ("--none?" function (:arguments ("form" "list")) nil [23682 23806])
            ("-none?" function (:arguments ("pred" "list")) nil [23808 23948])
            ("defalias" code nil nil [23950 23977])
            ("defalias" code nil nil [23978 24007])
            ("--only-some?" function (:arguments ("form" "list")) nil [24009 24319])
            ("-only-some?" function (:arguments ("pred" "list")) nil [24321 24619])
            ("defalias" code nil nil [24621 24658])
            ("defalias" code nil nil [24659 24698])
            ("-slice" function (:arguments ("list" "from" "to" "step")) nil [24700 25582])
            ("-take" function (:arguments ("n" "list")) nil [25584 25893])
            ("-take-last" function (:arguments ("n" "list")) nil [25895 26061])
            ("defalias" code nil nil [26063 26181])
            ("-drop-last" function (:arguments ("n" "list")) nil [26183 26405])
            ("--take-while" function (:arguments ("form" "list")) nil [26407 26633])
            ("-take-while" function (:arguments ("pred" "list")) nil [26635 26801])
            ("--drop-while" function (:arguments ("form" "list")) nil [26803 27047])
            ("-drop-while" function (:arguments ("pred" "list")) nil [27049 27212])
            ("-split-at" function (:arguments ("n" "list")) nil [27214 27520])
            ("-rotate" function (:arguments ("n" "list")) nil [27522 27887])
            ("-insert-at" function (:arguments ("n" "x" "list")) nil [27889 28154])
            ("-replace-at" function (:arguments ("n" "x" "list")) nil [28156 28426])
            ("-update-at" function (:arguments ("n" "func" "list")) nil [28428 28716])
            ("--update-at" function (:arguments ("n" "form" "list")) nil [28718 28875])
            ("-remove-at" function (:arguments ("n" "list")) nil [28877 29090])
            ("-remove-at-indices" function (:arguments ("indices" "list")) nil [29092 29654])
            ("--split-with" function (:arguments ("pred" "list")) nil [29656 30125])
            ("-split-with" function (:arguments ("pred" "list")) nil [30127 30313])
            ("-split-on" function (:arguments ("item" "list")) nil [30315 30644])
            ("--split-when" function (:arguments ("form" "list")) nil [30646 30796])
            ("-split-when" function (:arguments ("fn" "list")) nil [30798 31319])
            ("--separate" function (:arguments ("form" "list")) nil [31321 31608])
            ("-separate" function (:arguments ("pred" "list")) nil [31610 31771])
            ("---partition-all-in-steps-reversed" function (:arguments ("n" "step" "list")) nil [31773 32136])
            ("-partition-all-in-steps" function (:arguments ("n" "step" "list")) nil [32138 32432])
            ("-partition-in-steps" function (:arguments ("n" "step" "list")) nil [32434 32867])
            ("-partition-all" function (:arguments ("n" "list")) nil [32869 33101])
            ("-partition" function (:arguments ("n" "list")) nil [33103 33370])
            ("--partition-by" function (:arguments ("form" "list")) nil [33372 34189])
            ("-partition-by" function (:arguments ("fn" "list")) nil [34191 34344])
            ("--partition-by-header" function (:arguments ("form" "list")) nil [34346 35315])
            ("-partition-by-header" function (:arguments ("fn" "list")) nil [35317 35610])
            ("-partition-after-pred" function (:arguments ("pred" "list")) nil [35612 36097])
            ("-partition-before-pred" function (:arguments ("pred" "list")) nil [36099 36309])
            ("-partition-after-item" function (:arguments ("item" "list")) nil [36311 36501])
            ("-partition-before-item" function (:arguments ("item" "list")) nil [36503 36697])
            ("--group-by" function (:arguments ("form" "list")) nil [36699 37249])
            ("-group-by" function (:arguments ("fn" "list")) nil [37251 37428])
            ("-interpose" function (:arguments ("sep" "list")) nil [37430 37761])
            ("-interleave" function (:arguments ("lists")) nil [37763 38092])
            ("--zip-with" function (:arguments ("form" "list1" "list2")) nil [38094 38660])
            ("-zip-with" function (:arguments ("fn" "list1" "list2")) nil [38662 39074])
            ("-zip-lists" function (:arguments ("lists")) nil [39076 39709])
            ("-zip" function (:arguments ("lists")) nil [39711 40656])
            ("defalias" code nil nil [40658 40685])
            ("-zip-fill" function (:arguments ("fill-value" "lists")) nil [40687 40976])
            ("-unzip" function (:arguments ("lists")) nil [40978 41384])
            ("-cycle" function (:arguments ("list")) nil [41386 41623])
            ("-pad" function (:arguments ("fill-value" "lists")) nil [41625 41937])
            ("-annotate" function (:arguments ("fn" "list")) nil [41939 42125])
            ("--annotate" function (:arguments ("form" "list")) nil [42127 42271])
            ("dash--table-carry" function (:arguments ("lists" "restore-lists" "re")) nil [42273 42708])
            ("-table" function (:arguments ("fn" "lists")) nil [42710 43450])
            ("-table-flat" function (:arguments ("fn" "lists")) nil [43452 44330])
            ("-partial" function (:arguments ("fn" "args")) nil [44332 44616])
            ("-elem-index" function (:arguments ("elem" "list")) nil [44618 44863])
            ("-elem-indices" function (:arguments ("elem" "list")) nil [44865 45086])
            ("-find-indices" function (:arguments ("pred" "list")) nil [45088 45299])
            ("--find-indices" function (:arguments ("form" "list")) nil [45301 45457])
            ("-find-index" function (:arguments ("pred" "list")) nil [45459 45697])
            ("--find-index" function (:arguments ("form" "list")) nil [45699 45849])
            ("-find-last-index" function (:arguments ("pred" "list")) nil [45851 46099])
            ("--find-last-index" function (:arguments ("form" "list")) nil [46101 46234])
            ("-select-by-indices" function (:arguments ("indices" "list")) nil [46236 46506])
            ("-select-columns" function (:arguments ("columns" "table")) nil [46508 46903])
            ("-select-column" function (:arguments ("column" "table")) nil [46905 47282])
            ("->" function (:arguments ("x" "form" "more")) nil [47284 47798])
            ("->>" function (:arguments ("x" "form" "more")) nil [47800 48253])
            ("-->" function (:arguments ("x" "forms")) nil [48255 48594])
            ("-as->" function (:arguments ("value" "variable" "forms")) nil [48596 49094])
            ("-some->" function (:arguments ("x" "form" "more")) nil [49096 49488])
            ("-some->>" function (:arguments ("x" "form" "more")) nil [49490 49888])
            ("-some-->" function (:arguments ("x" "form" "more")) nil [49890 50288])
            ("-grade-up" function (:arguments ("comparator" "list")) nil [50290 50703])
            ("-grade-down" function (:arguments ("comparator" "list")) nil [50705 51121])
            ("dash--source-counter" variable nil nil [51123 51199])
            ("dash--match-make-source-symbol" function nil nil [51201 51465])
            ("dash--match-ignore-place-p" function (:arguments ("symbol")) nil [51467 51640])
            ("dash--match-cons-skip-cdr" function (:arguments ("skip-cdr" "source")) nil [51642 51932])
            ("dash--match-cons-get-car" function (:arguments ("skip-cdr" "source")) nil [51934 52170])
            ("dash--match-cons-get-cdr" function (:arguments ("skip-cdr" "source")) nil [52172 52402])
            ("dash--match-cons" function (:arguments ("match-form" "source")) nil [52404 53350])
            ("dash--get-expand-function" function (:arguments ("type")) nil [53352 53478])
            ("dash--match-cons-1" function (:arguments ("match-form" "source" "props")) nil [53480 54950])
            ("dash--vector-tail" function (:arguments ("seq" "start")) nil [54952 55272])
            ("dash--match-vector" function (:arguments ("match-form" "source")) nil [55274 56211])
            ("dash--match-vector-1" function (:arguments ("match-form" "source")) nil [56213 57681])
            ("dash--match-kv-normalize-match-form" function (:arguments ("pattern")) nil [57683 59514])
            ("dash--match-kv" function (:arguments ("match-form" "source")) nil [59516 60163])
            ("dash-expand:&hash" function (:arguments ("key" "source")) nil [60165 60294])
            ("dash-expand:&plist" function (:arguments ("key" "source")) nil [60296 60429])
            ("dash-expand:&alist" function (:arguments ("key" "source")) nil [60431 60566])
            ("dash-expand:&hash?" function (:arguments ("key" "source")) nil [60568 60831])
            ("defalias" code nil nil [60833 60882])
            ("dash--match-kv-1" function (:arguments ("match-form" "source" "type")) nil [60884 61868])
            ("dash--match-symbol" function (:arguments ("match-form" "source")) nil [61870 62025])
            ("dash--match" function (:arguments ("match-form" "source")) nil [62027 63287])
            ("dash--normalize-let-varlist" function (:arguments ("varlist")) nil [63289 63738])
            ("-let*" function (:arguments ("varlist" "body")) nil [63740 64478])
            ("-let" function (:arguments ("varlist" "body")) nil [64480 70758])
            ("-lambda" function (:arguments ("match-form" "body")) nil [70760 72060])
            ("-setq" function (:arguments ("forms")) nil [72062 74250])
            ("-if-let*" function (:arguments ("vars-vals" "then" "else")) nil [74252 74898])
            ("-if-let" function (:arguments ("var-val" "then" "else")) nil [74900 75205])
            ("--if-let" function (:arguments ("val" "then" "else")) nil [75207 75431])
            ("-when-let*" function (:arguments ("vars-vals" "body")) nil [75433 75863])
            ("-when-let" function (:arguments ("var-val" "body")) nil [75865 76142])
            ("--when-let" function (:arguments ("val" "body")) nil [76144 76344])
            ("-compare-fn" variable nil nil [76346 76565])
            ("-distinct" function (:arguments ("list")) nil [76567 77475])
            ("defalias" code nil nil [77477 77505])
            ("-union" function (:arguments ("list" "list2")) nil [77507 78395])
            ("-intersection" function (:arguments ("list" "list2")) nil [78397 78648])
            ("-difference" function (:arguments ("list" "list2")) nil [78650 78888])
            ("-powerset" function (:arguments ("list")) nil [78890 79096])
            ("-permutations" function (:arguments ("list")) nil [79098 79387])
            ("-inits" function (:arguments ("list")) nil [79389 79566])
            ("-tails" function (:arguments ("list")) nil [79568 79659])
            ("-common-prefix" function (:arguments ("lists")) nil [79661 79866])
            ("-common-suffix" function (:arguments ("lists")) nil [79868 80014])
            ("-contains?" function (:arguments ("list" "element")) nil [80016 80550])
            ("defalias" code nil nil [80552 80587])
            ("-same-items?" function (:arguments ("list" "list2")) nil [80589 80917])
            ("defalias" code nil nil [80919 80958])
            ("-is-prefix?" function (:arguments ("prefix" "list")) nil [80960 81185])
            ("-is-suffix?" function (:arguments ("suffix" "list")) nil [81187 81381])
            ("-is-infix?" function (:arguments ("infix" "list")) nil [81383 81679])
            ("defalias" code nil nil [81681 81718])
            ("defalias" code nil nil [81719 81756])
            ("defalias" code nil nil [81757 81792])
            ("-sort" function (:arguments ("comparator" "list")) nil [81794 82115])
            ("--sort" function (:arguments ("form" "list")) nil [82117 82252])
            ("-list" function (:arguments ("args")) nil [82254 82516])
            ("-repeat" function (:arguments ("n" "x")) nil [82518 82710])
            ("-sum" function (:arguments ("list")) nil [82712 82819])
            ("-running-sum" function (:arguments ("list")) nil [82821 83054])
            ("-product" function (:arguments ("list")) nil [83056 83171])
            ("-running-product" function (:arguments ("list")) nil [83173 83414])
            ("-max" function (:arguments ("list")) nil [83416 83559])
            ("-min" function (:arguments ("list")) nil [83561 83705])
            ("-max-by" function (:arguments ("comparator" "list")) nil [83707 84004])
            ("-min-by" function (:arguments ("comparator" "list")) nil [84006 84300])
            ("--max-by" function (:arguments ("form" "list")) nil [84302 84518])
            ("--min-by" function (:arguments ("form" "list")) nil [84520 84736])
            ("-iterate" function (:arguments ("fun" "init" "n")) nil [84738 85065])
            ("-fix" function (:arguments ("fn" "list")) nil [85067 85344])
            ("--fix" function (:arguments ("form" "list")) nil [85346 85440])
            ("-unfold" function (:arguments ("fun" "seed")) nil [85442 85961])
            ("--unfold" function (:arguments ("form" "seed")) nil [85963 86101])
            ("-cons-pair?" function (:arguments ("con")) nil [86103 86328])
            ("defalias" code nil nil [86330 86367])
            ("-cons-to-list" function (:arguments ("con")) nil [86369 86548])
            ("-value-to-list" function (:arguments ("val")) nil [86550 86875])
            ("-tree-mapreduce-from" function (:arguments ("fn" "folder" "init-value" "tree")) nil [86877 87553])
            ("--tree-mapreduce-from" function (:arguments ("form" "folder" "init-value" "tree")) nil [87555 87795])
            ("-tree-mapreduce" function (:arguments ("fn" "folder" "tree")) nil [87797 88420])
            ("--tree-mapreduce" function (:arguments ("form" "folder" "tree")) nil [88422 88619])
            ("-tree-map" function (:arguments ("fn" "tree")) nil [88621 88884])
            ("--tree-map" function (:arguments ("form" "tree")) nil [88886 89027])
            ("-tree-reduce-from" function (:arguments ("fn" "init-value" "tree")) nil [89029 89585])
            ("--tree-reduce-from" function (:arguments ("form" "init-value" "tree")) nil [89587 89784])
            ("-tree-reduce" function (:arguments ("fn" "tree")) nil [89786 90291])
            ("--tree-reduce" function (:arguments ("form" "tree")) nil [90293 90447])
            ("-tree-map-nodes" function (:arguments ("pred" "fun" "tree")) nil [90449 90869])
            ("--tree-map-nodes" function (:arguments ("pred" "form" "tree")) nil [90871 91023])
            ("-tree-seq" function (:arguments ("branch" "children" "tree")) nil [91025 91561])
            ("--tree-seq" function (:arguments ("branch" "children" "tree")) nil [91563 91709])
            ("-clone" function (:arguments ("list")) nil [91711 92000])
            ("dash-enable-font-lock" function nil nil [92002 104359])
            ("dash" package nil nil [104361 104376]))          
      :file "dash.el"
      :pointmax 104399
      :fsize 104398
      :lastmodtime '(24127 58775 764937 272000)
      :unmatched-syntax '((close-paren 1521 . 1522) (symbol 1447 . 1464) (open-paren 1446 . 1447))))
  :file "!home!Jamil!.emacs.d!elpa!dash-20200119.2310!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
