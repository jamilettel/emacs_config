;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [508 525])
            ("json" include nil nil [526 541])
            ("let-alist" include nil nil [542 562])
            ("clang-include-fixer" customgroup (:user-visible-flag t) nil [564 645])
            ("clang-include-fixer-add-include-hook" variable nil nil [647 869])
            ("clang-include-fixer-executable" variable (:default-value "clang-include-fixer") nil [871 1126])
            ("clang-include-fixer-input-format" variable (:default-value (quote yaml)) nil [1128 1473])
            ("clang-include-fixer-init-string" variable nil nil [1475 1718])
            ("clang-include-fixer-highlight" variable
               (:default-value (quote ((t :background "green")))
                :type "face")
                nil [1720 1863])
            ("clang-include-fixer" function (:user-visible-flag t) nil [1880 2214])
            ("clang-include-fixer-at-point" function (:user-visible-flag t) nil [2231 2520])
            ("clang-include-fixer-from-symbol" function
               (:user-visible-flag t
                :arguments ("symbol"))
                nil [2537 2914])
            ("clang-include-fixer--start" function (:arguments ("callback" "args")) nil [2916 4194])
            ("clang-include-fixer--make-process" function (:arguments ("callback" "args")) nil [4196 5160])
            ("clang-include-fixer--start-process" function (:arguments ("callback" "args")) nil [5162 6111])
            ("clang-include-fixer--command" function (:arguments ("args")) nil [6113 6804])
            ("clang-include-fixer--sentinel" function (:arguments ("stdin" "stdout" "stderr" "callback")) nil [6806 7974])
            ("clang-include-fixer--replace-buffer" function (:arguments ("stdout")) nil [7976 8383])
            ("clang-include-fixer--insert-line" function (:arguments ("from" "to")) nil [8385 10478])
            ("clang-include-fixer--add-header" function (:arguments ("stdout")) nil [10480 12502])
            ("clang-include-fixer--select-header" function (:arguments ("context")) nil [12504 13087])
            ("clang-include-fixer--history" variable nil nil [13089 13188])
            ("clang-include-fixer--prompt-for-header" function (:arguments ("context")) nil [13190 15240])
            ("clang-include-fixer--symbol-name" function (:arguments ("symbol-infos")) nil [15242 15675])
            ("clang-include-fixer--highlight" function (:arguments ("symbol-info")) nil [15677 16277])
            ("clang-include-fixer--closest-overlay" function (:arguments ("overlays")) nil [16279 16664])
            ("clang-include-fixer--parse-json" function (:arguments ("buffer")) nil [16666 17201])
            ("clang-include-fixer--encode-json" function (:arguments ("object")) nil [17203 17563])
            ("clang-include-fixer--symbol-at-point" function nil nil [17565 18730])
            ("clang-include-fixer--skip-double-colon-forward" function nil nil [18732 19084])
            ("clang-include-fixer--skip-double-colon-backward" function nil nil [19086 19443])
            ("defalias" code nil nil [19536 19745])
            ("defalias" code nil nil [19832 19936])
            ("defalias" code nil nil [20024 20186])
            ("clang-include-fixer" package nil nil [20188 20218]))          
      :file "clang-include-fixer.el"
      :pointmax 20256
      :fsize 20289
      :lastmodtime '(24049 16466 0 0)
      :unmatched-syntax nil))
  :file "!usr!share!emacs!site-lisp!site-start.d!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
