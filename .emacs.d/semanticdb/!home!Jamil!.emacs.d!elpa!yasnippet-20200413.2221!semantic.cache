;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags nil
      :file "yasnippet-autoloads.el"
      :pointmax 357
      :fsize 1832
      :lastmodtime '(24222 63396 763044 217000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [4843 4860])
            ("eldoc" include nil nil [4861 4877])
            ("declare-function" code nil nil [4895 4939])
            ("easymenu" include nil nil [4959 4978])
            ("help-mode" include nil nil [4979 4999])
            ("yas--editing-template" variable nil nil [5001 5031])
            ("yas--guessed-modes" variable nil nil [5032 5059])
            ("yas--indent-original-column" variable nil nil [5060 5096])
            ("yas--scheduled-jit-loads" variable nil nil [5097 5130])
            ("yas-keymap" variable nil nil [5131 5150])
            ("yas-selected-text" variable nil nil [5151 5177])
            ("yas-verbosity" variable nil nil [5178 5200])
            ("yas--current-template" variable nil nil [5201 5231])
            ("yasnippet" customgroup (:user-visible-flag t) nil [5268 5361])
            ("yas--loaddir" variable
               (:constant-flag t
                :default-value (file-name-directory (or load-file-name buffer-file-name)))
                nil [5363 5493])
            ("yas-installed-snippets-dir" variable
               (:constant-flag t
                :default-value (expand-file-name "snippets" yas--loaddir))
                nil [5495 5575])
            ("make-obsolete-variable" code nil nil [5576 5689])
            ("yas--default-user-snippets-dir" variable
               (:constant-flag t
                :default-value (expand-file-name "snippets" user-emacs-directory))
                nil [5691 5785])
            ("yas-snippet-dirs" variable (:default-value (list yas--default-user-snippets-dir)) nil [5787 6675])
            ("yas-snippet-dirs" function nil nil [6677 7208])
            ("yas-new-snippet-default" variable (:default-value "# -*- mode: snippet -*-
# name: $1
# key: ${2:${1:$(yas--key-from-desc yas-text)}}
# --
$0`(yas-escape-text yas-selected-text)`") nil [7210 7480])
            ("yas-prompt-functions" variable (:default-value (quote (yas-dropdown-prompt yas-completing-prompt yas-maybe-ido-prompt yas-no-prompt))) nil [7482 8427])
            ("yas-indent-line" variable (:default-value (quote auto)) nil [8429 8968])
            ("yas-also-auto-indent-first-line" variable nil nil [8970 9163])
            ("yas-also-indent-empty-lines" variable nil nil [9165 9286])
            ("yas-snippet-revival" variable (:default-value t) nil [9288 9400])
            ("yas-triggers-in-field" variable nil nil [9402 9601])
            ("yas-fallback-behavior" variable (:default-value (quote return-nil)) nil [9603 9916])
            ("make-obsolete-variable" code nil nil [9918 10126])
            ("yas-choose-keys-first" variable nil nil [10128 10363])
            ("yas-choose-tables-first" variable nil nil [10365 10645])
            ("yas-use-menu" variable (:default-value (quote abbreviate)) nil [10647 11204])
            ("yas-trigger-symbol" variable (:default-value (or (and (eq window-system (quote mac)) (ignore-errors (char-to-string 8677))) " =>")) nil [11206 11532])
            ("yas-wrap-around-region" variable nil nil [11534 12047])
            ("yas-good-grace" variable (:default-value t) nil [12068 12538])
            ("yas-visit-from-menu" variable nil nil [12540 12725])
            ("yas-expand-only-for-last-commands" variable nil nil [12727 13242])
            ("yas-alias-to-yas/prefix-p" variable (:default-value t) nil [13244 13432])
            ("yas-field-highlight-face" variable
               (:default-value (quote ((t (:inherit region))))
                :type "face")
                nil [13498 13630])
            ("yas--field-debug-face" variable
               (:default-value (quote nil)
                :type "face")
                nil [13632 13731])
            ("yas-maybe-skip-and-clear-field" variable
               (:constant-flag t
                :default-value (quote (menu-item "" yas-skip-and-clear-field :filter yas--maybe-clear-field-filter)))
                nil [13763 14084])
            ("yas-maybe-clear-field" variable
               (:constant-flag t
                :default-value (quote (menu-item "" yas-clear-field :filter yas--maybe-clear-field-filter)))
                nil [14086 14386])
            ("yas-filtered-definition" function (:arguments ("def")) nil [14388 14740])
            ("yas-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [(tab)] (yas-filtered-definition (quote yas-next-field-or-maybe-expand))) (define-key map (kbd "TAB") (yas-filtered-definition (quote yas-next-field-or-maybe-expand))) (define-key map [(shift tab)] (yas-filtered-definition (quote yas-prev-field))) (define-key map [backtab] (yas-filtered-definition (quote yas-prev-field))) (define-key map (kbd "C-g") (yas-filtered-definition (quote yas-abort-snippet))) (define-key map (kbd "C-d") (yas-filtered-definition yas-maybe-skip-and-clear-field)) (define-key map (kbd "DEL") (yas-filtered-definition yas-maybe-clear-field)) map)) nil [14742 15501])
            ("yas-key-syntaxes" variable (:default-value (list (function yas-try-key-from-whitespace) "w_.()" "w_." "w_" "w")) nil [15503 17118])
            ("yas-after-exit-snippet-hook" variable (:default-value (quote nil)) nil [17120 17474])
            ("yas-before-expand-snippet-hook" variable (:default-value (quote nil)) nil [17476 17571])
            ("yas-not-string-or-comment-condition" variable
               (:constant-flag t
                :default-value (quote (if (let ((ppss (syntax-ppss))) (or (nth 3 ppss) (nth 4 ppss))) (quote (require-snippet-condition . force-in-comment)) t)))
                nil [17573 17870])
            ("yas-buffer-local-condition" variable (:default-value t) nil [17872 19823])
            ("yas-keymap-disable-hook" variable nil nil [19825 20091])
            ("yas-overlay-priority" variable (:default-value 100) nil [20093 20318])
            ("yas-inhibit-overlay-modification-protection" variable nil nil [20320 20791])
            ("yas--version" variable
               (:constant-flag t
                :default-value "0.14.0")
                nil [20819 20851])
            ("yas--menu-table" variable (:default-value (make-hash-table)) nil [20853 20951])
            ("yas--escaped-characters" variable (:default-value (quote (92 96 34 39 36 125 123 40 41))) nil [20953 21078])
            ("yas--field-regexp" variable
               (:constant-flag t
                :default-value "${\\([0-9]+:\\)?\\([^}]*\\)}")
                nil [21080 21185])
            ("yas--multi-dollar-lisp-expression-regexp" variable
               (:constant-flag t
                :default-value "$+[ 	
]*\\(([^)]*)\\)")
                nil [21187 21326])
            ("yas--backquote-lisp-expression-regexp" variable
               (:constant-flag t
                :default-value "`\\([^`]*\\)`")
                nil [21328 21463])
            ("yas--transform-mirror-regexp" variable
               (:constant-flag t
                :default-value "${\\(?:\\([0-9]+\\):\\)?$\\([ 	
]*([^}]*\\)")
                nil [21465 21616])
            ("yas--simple-mirror-regexp" variable
               (:constant-flag t
                :default-value "$\\([0-9]+\\)")
                nil [21618 21715])
            ("yas--snippet-id-seed" variable nil nil [21717 21788])
            ("yas--original-auto-fill-function" variable nil nil [21790 21883])
            ("make-variable-buffer-local" code nil nil [21884 21946])
            ("yas--watch-auto-fill-backtrace" variable nil nil [21948 21991])
            ("yas--watch-auto-fill" function (:arguments ("sym" "newval" "op" "_where")) nil [21993 23031])
            ("when" code nil nil [23102 23338])
            ("yas--snippet-next-id" function nil nil [23340 23449])
            ("yas--minor-mode-menu" variable nil nil [23475 23538])
            ("yas--condition-cache-timestamp" variable nil nil [23540 23583])
            ("yas-maybe-expand-abbrev-key-filter" function (:arguments ("cmd")) nil [23585 23881])
            ("define-obsolete-function-alias" code nil nil [23883 23991])
            ("yas-maybe-expand" variable
               (:constant-flag t
                :default-value (quote (menu-item "" yas-expand :filter yas-maybe-expand-abbrev-key-filter)))
                nil [23993 24259])
            ("yas-minor-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [(tab)] yas-maybe-expand) (define-key map (kbd "TAB") yas-maybe-expand) (define-key map "&" (quote yas-insert-snippet)) (define-key map "&" (quote yas-new-snippet)) (define-key map "&" (quote yas-visit-snippet-file)) map)) nil [24261 24646])
            ("easy-menu-define" code nil nil [24648 29890])
            ("define-obsolete-variable-alias" code nil nil [29892 29967])
            ("yas--extra-modes" variable nil nil [29968 30178])
            ("yas--tables" variable (:default-value (make-hash-table)) nil [30180 30276])
            ("yas--parents" variable (:default-value (make-hash-table)) nil [30278 30670])
            ("yas--direct-keymaps" variable (:default-value (list)) nil [30672 31176])
            ("yas-direct-keymaps-reload" function (:user-visible-flag t) nil [31178 31558])
            ("yas--modes-to-activate" function (:arguments ("mode")) nil [31560 32825])
            ("yas-minor-mode-hook" variable nil nil [32827 32908])
            ("yas--auto-fill-wrapper" function nil nil [32910 33147])
            ("define-minor-mode" code nil nil [33164 35122])
            ("yas-activate-extra-mode" function
               (:user-visible-flag t
                :arguments ("mode"))
                nil [35124 35753])
            ("yas-deactivate-extra-mode" function
               (:user-visible-flag t
                :arguments ("mode"))
                nil [35755 36094])
            ("yas-temp-buffer-p" function (:arguments ("buffer")) nil [36096 36181])
            ("define-obsolete-variable-alias" code nil nil [36183 36273])
            ("yas-dont-activate-functions" variable (:default-value (list (function minibufferp) (function yas-temp-buffer-p))) nil [36274 37022])
            ("unless" code nil nil [37023 37131])
            ("yas-minor-mode-on" function (:user-visible-flag t) nil [37134 37619])
            ("define-globalized-minor-mode" code nil nil [37636 37715])
            ("yas--global-mode-reload-with-jit-maybe" function nil nil [37717 37863])
            ("add-hook" code nil nil [37865 37938])
            ("yas--font-lock-keywords" variable (:default-value (append (quote (("^#.*$" . font-lock-comment-face))) (with-temp-buffer (let ((prog-mode-hook nil) (emacs-lisp-mode-hook nil)) (ignore-errors (emacs-lisp-mode))) (font-lock-set-defaults) (if (eq t (car-safe font-lock-keywords)) (cadr font-lock-keywords) font-lock-keywords)) (quote (("\\$\\([0-9]+\\)" (0 font-lock-keyword-face) (1 font-lock-string-face t)) ("\\${\\([0-9]+\\):?" (0 font-lock-keyword-face) (1 font-lock-warning-face t)) ("\\(\\$(\\)" 1 font-lock-preprocessor-face) ("}" (0 font-lock-keyword-face)))))) nil [37964 38782])
            ("snippet-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (easy-menu-define nil map "Menu used when snippet-mode is active." (cons "Snippet" (mapcar (function (lambda (ent) (when (nth 2 ent) (define-key map (nth 2 ent) (nth 1 ent))) (vector (nth 0 ent) (nth 1 ent) t))) (quote (("Load this snippet" yas-load-snippet-buffer "") ("Load and quit window" yas-load-snippet-buffer-and-close "") ("Try out this snippet" yas-tryout-snippet "")))))) map)) nil [38784 39468])
            ("if" code nil nil [39581 40478])
            ("yas-snippet-mode-buffer-p" function nil nil [40481 40790])
            ("add-to-list" code nil nil [40906 41003])
            ("cl-defstruct" code nil nil [41053 42548])
            ("cl-defstruct" code nil nil [42550 43758])
            ("yas--get-template-by-uuid" function (:arguments ("mode" "uuid")) nil [43760 43973])
            ("yas--remove-template-by-uuid" function (:arguments ("table" "uuid")) nil [45840 46985])
            ("yas-maybe-expand-from-keymap" variable
               (:constant-flag t
                :default-value (quote (menu-item "" yas-expand-from-keymap :filter yas--maybe-expand-from-keymap-filter)))
                nil [46987 47126])
            ("yas--add-template" function (:arguments ("table" "template")) nil [47128 48103])
            ("yas--update-template" function (:arguments ("table" "template")) nil [48105 48527])
            ("yas--update-template-menu" function (:arguments ("table" "template")) nil [48529 50486])
            ("yas--namehash-templates-alist" function (:arguments ("namehash")) nil [50488 50689])
            ("yas--fetch" function (:arguments ("table" "key")) nil [50691 51072])
            ("yas--eval-condition" function (:arguments ("condition")) nil [51107 51406])
            ("yas--filter-templates-by-condition" function (:arguments ("templates")) nil [51409 52076])
            ("yas--require-template-specific-condition-p" function nil nil [52078 52791])
            ("yas--template-can-expand-p" function (:arguments ("condition" "requirement")) nil [52793 53106])
            ("yas--table-templates" function (:arguments ("table")) nil [53108 53607])
            ("yas--templates-for-key-at-point" function nil nil [53609 55170])
            ("yas--table-all-keys" function (:arguments ("table")) nil [55172 55498])
            ("yas--table-mode" function (:arguments ("table")) nil [55500 55566])
            ("yas--remove-misc-free-from-undo" function (:arguments ("old-undo-list")) nil [55606 56706])
            ("yas--save-restriction-and-widen" function (:arguments ("body")) nil [56708 57183])
            ("yas--eval-for-string" function (:arguments ("form")) nil [57185 57659])
            ("yas--eval-for-effect" function (:arguments ("form")) nil [57661 57751])
            ("yas--read-lisp" function (:arguments ("string" "nil-on-error")) nil [57753 58121])
            ("yas--read-keybinding" function (:arguments ("keybinding")) nil [58123 58681])
            ("yas--table-get-create" function (:arguments ("mode")) nil [58683 59122])
            ("yas--get-snippet-tables" function (:arguments ("mode")) nil [59124 59518])
            ("yas--menu-keymap-get-create" function (:arguments ("mode" "parents")) nil [59520 60101])
            ("yas--parse-template" function (:arguments ("file")) nil [60157 63286])
            ("yas--calculate-group" function (:arguments ("file")) nil [63288 63932])
            ("yas--subdirs" function (:arguments ("directory" "filep")) nil [63934 64598])
            ("yas--make-menu-binding" function (:arguments ("template")) nil [64600 64809])
            ("yas--expand-or-visit-from-menu" function (:arguments ("mode" "uuid")) nil [64811 65421])
            ("yas--key-from-desc" function (:arguments ("text")) nil [65423 65570])
            ("yas--prompt-for-template" function (:arguments ("templates" "prompt")) nil [65613 66238])
            ("yas--prompt-for-keys" function (:arguments ("keys" "prompt")) nil [66240 66539])
            ("yas--prompt-for-table" function (:arguments ("tables" "prompt")) nil [66541 66910])
            ("yas-x-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [66912 67689])
            ("yas-maybe-ido-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [67691 67841])
            ("yas-ido-prompt" function (:arguments ("prompt" "choices" "display-fn")) nil [67843 67994])
            ("yas-dropdown-prompt" function (:arguments ("_prompt" "choices" "display-fn")) nil [67996 68295])
            ("yas-completing-prompt" function (:arguments ("prompt" "choices" "display-fn" "completion-fn")) nil [68297 68788])
            ("yas-no-prompt" function (:arguments ("_prompt" "choices" "_display-fn")) nil [68790 68872])
            ("yas--creating-compiled-snippets" variable nil nil [68997 69041])
            ("yas--define-snippets-1" function (:arguments ("snippet" "snippet-table")) nil [69043 69355])
            ("yas-define-snippets" function (:arguments ("mode" "snippets")) nil [69357 71158])
            ("yas--template-get-file" function (:arguments ("template")) nil [71195 71552])
            ("yas--load-yas-setup-file" function (:arguments ("file")) nil [71554 71929])
            ("yas--define-parents" function (:arguments ("mode" "parents")) nil [71931 72171])
            ("yas-load-directory" function
               (:user-visible-flag t
                :arguments ("top-level-dir" "use-jit" "interactive"))
                nil [72173 74543])
            ("yas--load-directory-1" function (:arguments ("directory" "mode-sym")) nil [74545 75552])
            ("yas--load-directory-2" function (:arguments ("directory" "mode-sym")) nil [75554 76501])
            ("yas--load-snippet-dirs" function (:arguments ("nojit")) nil [76503 77335])
            ("yas-reload-all" function
               (:user-visible-flag t
                :arguments ("no-jit" "interactive"))
                nil [77337 80460])
            ("yas-after-reload-hook" variable nil nil [80462 80534])
            ("yas--load-pending-jits" function nil nil [80536 80915])
            ("yas-escape-text" function (:arguments ("text")) nil [80917 81044])
            ("yas-compile-directory" function
               (:user-visible-flag t
                :arguments ("top-level-dir"))
                nil [81082 81415])
            ("yas-recompile-all" function (:user-visible-flag t) nil [81417 81558])
            ("yas--scheduled-jit-loads" variable (:default-value (make-hash-table)) nil [81582 81713])
            ("yas--schedule-jit" function (:arguments ("mode" "fun")) nil [81715 81804])
            ("yas-about" function nil nil [81840 82944])
            ("yas--template-menu-binding-pair-get-create" function (:arguments ("template" "type")) nil [84350 85071])
            ("yas--template-menu-managed-by-yas-define-menu" function (:arguments ("template")) nil [85072 85266])
            ("yas--show-menu-p" function (:arguments ("mode")) nil [85269 85487])
            ("yas--delete-from-keymap" function (:arguments ("keymap" "uuid")) nil [85489 86541])
            ("yas-define-menu" function (:arguments ("mode" "menu" "omit-items")) nil [86543 87849])
            ("yas--define-menu-1" function (:arguments ("table" "menu-keymap" "menu" "uuidhash" "group-list")) nil [87851 89405])
            ("yas--define" function (:arguments ("mode" "key" "template" "name" "condition" "group")) nil [89408 89883])
            ("yas-hippie-try-expand" function (:arguments ("first-time?")) nil [89885 90176])
            ("yas-define-condition-cache" function (:arguments ("func" "doc" "body")) nil [90224 91254])
            ("defalias" code nil nil [91256 91307])
            ("yas-expand-from-trigger-key" function
               (:user-visible-flag t
                :arguments ("field"))
                nil [91308 92659])
            ("yas--maybe-expand-from-keymap-filter" function (:arguments ("cmd")) nil [92661 93407])
            ("yas-expand-from-keymap" function (:user-visible-flag t) nil [93409 93721])
            ("yas--expand-or-prompt-for-template" function (:arguments ("templates" "start" "end")) nil [93723 94289])
            ("yas--fallback" function nil nil [94585 96457])
            ("yas--keybinding-beyond-yasnippet" function nil nil [96459 96765])
            ("yas--fallback-translate-input" function (:arguments ("keys")) nil [96767 97737])
            ("yas--all-templates" function (:arguments ("tables")) nil [97777 98531])
            ("yas--lookup-snippet-1" function (:arguments ("name" "mode")) nil [98533 98863])
            ("yas-lookup-snippet" function (:arguments ("name" "mode" "noerror")) nil [98865 99261])
            ("yas-insert-snippet" function
               (:user-visible-flag t
                :arguments ("no-condition"))
                nil [99263 100414])
            ("yas-visit-snippet-file" function (:user-visible-flag t) nil [100416 101093])
            ("yas--visit-snippet-file-1" function (:arguments ("template")) nil [101095 102811])
            ("yas--guess-snippet-directories-1" function (:arguments ("table")) nil [102813 103073])
            ("yas--guess-snippet-directories" function (:arguments ("table")) nil [103075 104228])
            ("yas--make-directory-maybe" function (:arguments ("table-and-dirs" "main-table-string")) nil [104230 105358])
            ("yas-new-snippet-buffer-name" variable
               (:constant-flag t
                :default-value "+new-snippet+")
                nil [105483 105537])
            ("yas-new-snippet" function
               (:user-visible-flag t
                :arguments ("no-template"))
                nil [105539 106549])
            ("yas--compute-major-mode-and-parents" function (:arguments ("file")) nil [106551 108161])
            ("yas--editing-template" variable nil nil [108163 108277])
            ("yas--current-template" variable nil nil [108279 108375])
            ("yas--guessed-modes" variable nil nil [108377 108472])
            ("yas--read-table" function nil nil [108474 109339])
            ("yas-load-snippet-buffer" function
               (:user-visible-flag t
                :arguments ("table" "interactive"))
                nil [109341 110765])
            ("yas-maybe-load-snippet-buffer" function nil nil [110767 111485])
            ("yas-load-snippet-buffer-and-close" function
               (:user-visible-flag t
                :arguments ("table" "kill"))
                nil [111487 112815])
            ("declare-function" code nil nil [112817 112872])
            ("yas-tryout-snippet" function
               (:user-visible-flag t
                :arguments ("debug"))
                nil [112874 114845])
            ("yas-active-keys" function nil nil [114847 115116])
            ("yas--template-fine-group" function (:arguments ("template")) nil [115118 115265])
            ("yas-describe-table-by-namehash" function (:user-visible-flag t) nil [115267 116185])
            ("yas-describe-tables" function
               (:user-visible-flag t
                :arguments ("with-nonactive"))
                nil [116187 116888])
            ("yas--describe-pretty-table" function (:arguments ("table" "original-buffer")) nil [116890 119671])
            ("yas-try-key-from-whitespace" function (:arguments ("_start-point")) nil [119741 120019])
            ("yas-shortest-key-until-whitespace" function (:arguments ("_start-point")) nil [120021 120224])
            ("yas-longest-key-from-whitespace" function (:arguments ("start-point")) nil [120226 120634])
            ("yas-modified-p" variable nil nil [120705 120798])
            ("yas-moving-away-p" variable nil nil [120800 120874])
            ("yas-text" variable nil nil [120876 120930])
            ("yas-substr" function (:arguments ("str" "pattern" "subexp")) nil [120932 121299])
            ("yas-choose-value" function (:arguments ("possibilities")) nil [121301 121844])
            ("yas-completing-read" function (:arguments ("args")) nil [121846 122264])
            ("yas--auto-next" function nil nil [122266 122683])
            ("yas-auto-next" function (:arguments ("body")) nil [122685 122926])
            ("yas-key-to-value" function (:arguments ("alist")) nil [122928 123173])
            ("yas-throw" function (:arguments ("text")) nil [123175 123289])
            ("put" code nil nil [123290 123351])
            ("put" code nil nil [123352 123405])
            ("yas-verify-value" function (:arguments ("possibilities")) nil [123407 123675])
            ("yas-field-value" function (:arguments ("number")) nil [123677 124033])
            ("yas-text" function nil nil [124035 124195])
            ("yas-selected-text" function nil nil [124197 124402])
            ("yas--get-field-once" function (:arguments ("number" "transform-fn")) nil [124404 124598])
            ("yas-default-from-field" function (:arguments ("number")) nil [124600 124694])
            ("yas-inside-string" function nil nil [124696 124871])
            ("yas-unimplemented" function (:arguments ("missing-feature")) nil [124873 125294])
            ("yas--active-field-overlay" variable nil nil [125342 125421])
            ("yas--active-snippets" variable nil nil [125423 125494])
            ("make-variable-buffer-local" code nil nil [125495 125545])
            ("yas--field-protection-overlays" variable nil nil [125547 125641])
            ("yas-selected-text" variable nil nil [125643 125736])
            ("yas--start-column" variable nil nil [125738 125820])
            ("make-variable-buffer-local" code nil nil [125822 125877])
            ("make-variable-buffer-local" code nil nil [125878 125938])
            ("put" code nil nil [125939 125990])
            ("put" code nil nil [125991 126047])
            ("cl-defstruct" code nil nil [126049 126426])
            ("cl-defstruct" code nil nil [126428 126987])
            ("cl-defstruct" code nil nil [126990 127449])
            ("cl-defstruct" code nil nil [127451 127532])
            ("yas--letenv" function (:arguments ("env" "body")) nil [127534 128024])
            ("yas--snippet-map-markers" function (:arguments ("fun" "snippet")) nil [128026 128760])
            ("yas--snippet-live-p" function (:arguments ("snippet")) nil [128762 129059])
            ("yas--apply-transform" function (:arguments ("field-or-mirror" "field" "empty-on-nil-p")) nil [129061 130122])
            ("yas--replace-all" function (:arguments ("from" "to" "text")) nil [130124 130449])
            ("yas--snippet-find-field" function (:arguments ("snippet" "number")) nil [130451 130629])
            ("yas--snippet-sort-fields" function (:arguments ("snippet")) nil [130631 130852])
            ("yas--snippet-field-compare" function (:arguments ("field1" "field2")) nil [130854 131432])
            ("yas--field-probably-deleted-p" function (:arguments ("snippet" "field")) nil [131434 132202])
            ("yas-active-snippets" function (:arguments ("beg" "end")) nil [132204 133453])
            ("define-obsolete-function-alias" code nil nil [133455 133541])
            ("yas-next-field-or-maybe-expand" function (:user-visible-flag t) nil [133543 133990])
            ("yas-next-field-will-exit-p" function (:arguments ("arg")) nil [133992 134307])
            ("yas--find-next-field" function (:arguments ("n" "snippet" "active")) nil [134309 134753])
            ("yas-next-field" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [134755 135613])
            ("yas--place-overlays" function (:arguments ("snippet" "field")) nil [135615 136067])
            ("yas--move-to-field" function (:arguments ("snippet" "field")) nil [136069 137041])
            ("yas-prev-field" function (:user-visible-flag t) nil [137043 137170])
            ("yas-abort-snippet" function (:arguments ("snippet")) nil [137172 137383])
            ("yas-exit-snippet" function
               (:user-visible-flag t
                :arguments ("snippet"))
                nil [137385 137757])
            ("yas-exit-all-snippets" function (:user-visible-flag t) nil [137759 137974])
            ("yas--inhibit-overlay-hooks" variable nil nil [138016 138137])
            ("yas-snippet-beg" variable nil nil [138139 138219])
            ("yas-snippet-end" variable nil nil [138220 138294])
            ("yas--commit-snippet" function (:arguments ("snippet")) nil [138296 140175])
            ("yas--snippets-to-move" variable nil nil [140177 140211])
            ("make-variable-buffer-local" code nil nil [140212 140263])
            ("yas--prepare-snippets-for-move" function (:arguments ("beg" "end" "buf" "pos")) nil [140265 141095])
            ("yas--on-buffer-kill" function nil nil [141097 141979])
            ("add-hook" code nil nil [141981 142031])
            ("yas--finish-moving-snippets" function nil nil [142033 142856])
            ("yas--safely-call-fun" function (:arguments ("fun")) nil [142858 143089])
            ("yas--safely-run-hook" function (:arguments ("hook")) nil [143091 143392])
            ("yas--check-commit-snippet" function nil nil [143394 145346])
            ("yas--markers-to-points" function (:arguments ("snippet")) nil [145773 146046])
            ("yas--points-to-markers" function (:arguments ("snippet")) nil [146048 146214])
            ("yas--maybe-move-to-active-field" function (:arguments ("snippet")) nil [146216 146561])
            ("yas--field-contains-point-p" function (:arguments ("field" "point")) nil [146563 146767])
            ("yas--field-text-for-display" function (:arguments ("field")) nil [146769 146938])
            ("yas--undo-in-progress" function nil nil [146940 147102])
            ("yas--make-control-overlay" function (:arguments ("snippet" "start" "end")) nil [147104 147578])
            ("yas-current-field" function nil nil [147580 147790])
            ("yas--maybe-clear-field-filter" function (:arguments ("cmd")) nil [147792 148142])
            ("yas-skip-and-clear-field" function
               (:user-visible-flag t
                :arguments ("field"))
                nil [148144 148352])
            ("yas-clear-field" function
               (:user-visible-flag t
                :arguments ("field"))
                nil [148354 148513])
            ("yas-skip-and-clear-or-delete-char" function
               (:user-visible-flag t
                :arguments ("field"))
                nil [148515 148985])
            ("yas--skip-and-clear" function (:arguments ("field" "from")) nil [148987 149597])
            ("yas--mark-this-and-children-modified" function (:arguments ("field")) nil [149599 149980])
            ("yas--make-move-active-field-overlay" function (:arguments ("snippet" "field")) nil [149982 151106])
            ("yas--skip-and-clear-field-p" function (:arguments ("field" "beg" "_end" "length")) nil [151108 151461])
            ("yas--merge-and-drop-dups" function (:arguments ("list1" "list2" "cmp" "key")) nil [151464 151743])
            ("yas--before-change-modified-snippets" variable nil nil [151745 151794])
            ("make-variable-buffer-local" code nil nil [151795 151861])
            ("yas--gather-active-snippets" function (:arguments ("overlay" "beg" "end" "then-delete")) nil [151863 152944])
            ("yas--todo-snippet-indent" variable nil nil [152946 152987])
            ("make-variable-buffer-local" code nil nil [152988 153042])
            ("yas--on-field-overlay-modification" function (:arguments ("overlay" "after?" "beg" "end" "length")) nil [153044 155648])
            ("yas--do-todo-snippet-indent" function nil nil [155650 156049])
            ("yas--auto-fill" function nil nil [156051 159614])
            ("yas--make-move-field-protection-overlays" function (:arguments ("snippet" "field")) nil [160041 161558])
            ("yas--on-protection-overlay-modification" function (:arguments ("_overlay" "after?" "beg" "end" "length")) nil [161560 162165])
            ("add-to-list" code nil nil [162167 162230])
            ("yas-expand-snippet" function (:arguments ("snippet" "start" "end" "expand-env")) nil [163362 167750])
            ("yas--take-care-of-redo" function (:arguments ("snippet")) nil [167752 168074])
            ("yas--snippet-revive" function (:arguments ("beg" "end" "snippet")) nil [168076 169024])
            ("yas--snippet-create" function (:arguments ("content" "expand-env" "begin" "end")) nil [169026 171294])
            ("yas--fom-start" function (:arguments ("fom")) nil [172067 172264])
            ("yas--fom-end" function (:arguments ("fom")) nil [172266 172457])
            ("yas--fom-next" function (:arguments ("fom")) nil [172459 172651])
            ("yas--fom-parent-field" function (:arguments ("fom")) nil [172653 172852])
            ("yas--calculate-adjacencies" function (:arguments ("snippet")) nil [172854 174101])
            ("yas--calculate-simple-fom-parentage" function (:arguments ("snippet" "fom")) nil [174103 175057])
            ("yas--advance-end-maybe" function (:arguments ("fom" "newend")) nil [175059 175794])
            ("yas--advance-end-maybe-previous-fields" function (:arguments ("field" "end" "snippets")) nil [175796 176130])
            ("yas--advance-start-maybe" function (:arguments ("fom" "newstart")) nil [176132 176435])
            ("yas--advance-end-of-parents-maybe" function (:arguments ("field" "newend")) nil [176437 176871])
            ("yas--dollar-regions" variable nil nil [176873 176995])
            ("yas--indent-markers" variable nil nil [176997 177073])
            ("yas--snippet-parse-create" function (:arguments ("snippet")) nil [177075 179522])
            ("yas--snapshot-location" function (:arguments ("position" "beg" "end")) nil [181037 182142])
            ("yas--snapshot-line-location" function (:arguments ("position" "beg" "end")) nil [182144 182449])
            ("yas--snapshot-overlay-location" function (:arguments ("overlay" "beg" "end")) nil [182451 183025])
            ("yas--snapshot-overlay-line-location" function (:arguments ("overlay")) nil [183027 183340])
            ("yas--goto-saved-location" function (:arguments ("re-count")) nil [183342 183894])
            ("yas--restore-overlay-location" function (:arguments ("ov-locations")) nil [183896 184413])
            ("yas--goto-saved-line-location" function (:arguments ("base-pos" "l-re-count")) nil [184415 184833])
            ("yas--restore-overlay-line-location" function (:arguments ("base-pos" "ov-locations")) nil [184835 185219])
            ("yas--indent-region" function (:arguments ("from" "to" "snippet")) nil [185221 186629])
            ("yas--indent-original-column" variable nil nil [186631 186671])
            ("yas--indent" function (:arguments ("snippet")) nil [186672 188171])
            ("yas--collect-snippet-markers" function (:arguments ("snippet")) nil [188173 188372])
            ("yas--escape-string" function (:arguments ("escaped")) nil [188374 188470])
            ("yas--protect-escapes" function (:arguments ("text" "escaped")) nil [188472 189062])
            ("yas--restore-escapes" function (:arguments ("text" "escaped")) nil [189064 189644])
            ("yas--save-backquotes" function nil nil [189646 191400])
            ("yas--restore-backquotes" function (:arguments ("saved-quotes")) nil [191402 191860])
            ("yas--scan-sexps" function (:arguments ("from" "count")) nil [191862 192341])
            ("yas--make-marker" function (:arguments ("pos")) nil [192343 192538])
            ("yas--indent-parse-create" function nil nil [192540 192940])
            ("yas--scan-for-field-end" function nil nil [192942 193160])
            ("yas--field-parse-create" function (:arguments ("snippet" "parent-field")) nil [193162 197525])
            ("yas--transform-mirror-parse-create" function (:arguments ("snippet")) nil [197527 198785])
            ("yas--simple-fom-create" function (:arguments ("snippet")) nil [198787 200250])
            ("yas--delete-regions" function (:arguments ("regions")) nil [200252 200528])
            ("yas--calculate-mirror-depth" function (:arguments ("mirror" "traversed")) nil [200530 201235])
            ("yas--snippet-field-mirrors" function (:arguments ("snippet")) nil [201237 201850])
            ("yas--indent-mirrors-of-snippet" function (:arguments ("snippet" "f-ms")) nil [201852 202589])
            ("yas--update-mirrors" function (:arguments ("snippet")) nil [202591 203810])
            ("yas--mirror-update-display" function (:arguments ("mirror" "field")) nil [203812 204957])
            ("yas--field-update-display" function (:arguments ("field")) nil [204959 205884])
            ("yas--post-command-handler" function nil nil [205914 207953])
            ("put" code nil nil [208070 208155])
            ("yas--expand-from-trigger-key-doc" function (:arguments ("context")) nil [208156 209160])
            ("put" code nil nil [209162 209253])
            ("yas--expand-from-keymap-doc" function (:arguments ("context")) nil [209254 210418])
            ("yas--template-pretty-list" function (:arguments ("templates")) nil [210420 210740])
            ("define-button-type" code nil nil [210742 210945])
            ("yas--snippet-description-finish-runonce" function nil nil [210947 211194])
            ("yas--create-snippet-xrefs" function nil nil [211196 211679])
            ("eldoc-add-command" code nil nil [211706 211911])
            ("yas-verbosity" variable (:default-value 3) nil [211925 212028])
            ("yas--message" function (:arguments ("level" "message" "args")) nil [212030 212234])
            ("yas--warning" function (:arguments ("format-control" "format-args")) nil [212236 212422])
            ("yas--format" function (:arguments ("format-control" "format-args")) nil [212424 212542])
            ("unload-function-defs-list" variable nil nil [212561 212595])
            ("yasnippet-unload-function" function nil nil [212611 213490])
            ("yas-initialize" function nil nil [213542 213719])
            ("yas--backported-syms" variable (:default-value (quote (yas-snippet-dirs yas-prompt-functions yas-indent-line yas-also-auto-indent-first-line yas-snippet-revival yas-triggers-in-field yas-fallback-behavior yas-choose-keys-first yas-choose-tables-first yas-use-menu yas-trigger-symbol yas-wrap-around-region yas-good-grace yas-visit-from-menu yas-expand-only-for-last-commands yas-field-highlight-face yas-keymap yas-verbosity yas-extra-modes yas-key-syntaxes yas-after-exit-snippet-hook yas-before-expand-snippet-hook yas-buffer-local-condition yas-dont-activate yas-x-prompt yas-ido-prompt yas-no-prompt yas-completing-prompt yas-dropdown-prompt yas-expand yas-minor-mode yas-global-mode yas-direct-keymaps-reload yas-minor-mode-on yas-load-directory yas-reload-all yas-compile-directory yas-recompile-all yas-about yas-expand-from-trigger-key yas-expand-from-keymap yas-insert-snippet yas-visit-snippet-file yas-new-snippet yas-load-snippet-buffer yas-tryout-snippet yas-describe-tables yas-next-field-or-maybe-expand yas-next-field yas-prev-field yas-abort-snippet yas-exit-snippet yas-exit-all-snippets yas-skip-and-clear-or-delete-char yas-initialize yas-expand-snippet yas-define-snippets yas-define-menu yas-snippet-beg yas-snippet-end yas-modified-p yas-moving-away-p yas-substr yas-choose-value yas-key-to-value yas-throw yas-verify-value yas-field-value yas-text yas-selected-text yas-default-from-field yas-inside-string yas-unimplemented yas-define-condition-cache yas-hippie-try-expand))) nil [213721 218603])
            ("when" code nil nil [218605 219140])
            ("yas--exported-syms" variable (:default-value (let (exported) (mapatoms (lambda (atom) (if (and (or (and (boundp atom) (not (get atom (quote byte-obsolete-variable)))) (and (fboundp atom) (not (get atom (quote byte-obsolete-info))))) (string-match-p "\\`yas-[^-]" (symbol-name atom))) (push atom exported)))) exported)) nil [219142 219796])
            ("yasnippet" package nil nil [219800 219820]))          
      :file "yasnippet.el"
      :pointmax 219918
      :fsize 219919
      :lastmodtime '(24222 63396 510045 35000)
      :unmatched-syntax '((close-paren 40478 . 40479) (symbol 39562 . 39578) (open-paren 39561 . 39562))))
  :file "!home!Jamil!.emacs.d!elpa!yasnippet-20200413.2221!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
